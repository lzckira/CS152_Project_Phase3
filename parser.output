Terminals unused in grammar

   ERROR


Grammar

    0 $accept: prog_start "end of file"

    1 prog_start: program

    2 program: %empty
    3        | function program

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: %empty
    6             | declaration SEMICOLON declarations

    7 declaration: identifiers COLON INTEGER
    8            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    9 identifiers: IDENT
   10            | IDENT COMMA identifiers

   11 statements: %empty
   12           | statements statement SEMICOLON

   13 statement: var ASSIGN expression
   14          | IF bool_exp THEN statements ENDIF
   15          | IF bool_exp THEN statements ELSE statements ENDIF
   16          | WHILE bool_exp BEGINLOOP statements ENDLOOP
   17          | DO BEGINLOOP statements ENDLOOP WHILE bool_exp
   18          | READ vars
   19          | WRITE vars
   20          | CONTINUE
   21          | RETURN expression

   22 vars: var
   23     | vars COMMA var

   24 var: IDENT
   25    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   26 bool_exp: relation_and_exp
   27         | relation_and_exp OR relation_and_exp

   28 relation_and_exp: relation_exp
   29                 | relation_and_exp AND relation_exp

   30 relation_exp: expression comp expression
   31             | NOT expression comp expression
   32             | TRUE
   33             | NOT TRUE
   34             | FALSE
   35             | NOT FALSE
   36             | L_PAREN bool_exp R_PAREN
   37             | NOT L_PAREN bool_exp R_PAREN

   38 comp: EQ
   39     | NEQ
   40     | LT
   41     | GT
   42     | LTE
   43     | GTE

   44 expressions: expression
   45            | expressions COMMA expression

   46 expression: multiplicative_expression
   47           | expression ADD multiplicative_expression
   48           | expression SUB multiplicative_expression

   49 multiplicative_expression: term
   50                          | multiplicative_expression MULT term
   51                          | multiplicative_expression DIV term
   52                          | multiplicative_expression MOD term

   53 term: var
   54     | SUB var
   55     | NUMBER
   56     | SUB NUMBER
   57     | L_PAREN expression R_PAREN
   58     | SUB L_PAREN expression R_PAREN
   59     | IDENT L_PAREN R_PAREN
   60     | IDENT L_PAREN expressions R_PAREN


Terminals, with rules where they appear

"end of file" (0) 0
error (256)
FUNCTION (258) 4
IDENT (259) 4 9 10 24 25 59 60
BEGIN_PARAMS (260) 4
END_PARAMS (261) 4
BEGIN_LOCALS (262) 4
END_LOCALS (263) 4
BEGIN_BODY (264) 4
END_BODY (265) 4
INTEGER (266) 7 8
ARRAY (267) 8
OF (268) 8
IF (269) 14 15
THEN (270) 14 15
ENDIF (271) 14 15
ELSE (272) 15
WHILE (273) 16 17
DO (274) 17
BEGINLOOP (275) 16 17
ENDLOOP (276) 16 17
CONTINUE (277) 20
READ (278) 18
WRITE (279) 19
AND (280) 29
OR (281) 27
NOT (282) 31 33 35 37
TRUE (283) 32 33
FALSE (284) 34 35
RETURN (285) 21
SUB (286) 48 54 56 58
ADD (287) 47
MULT (288) 50
DIV (289) 51
MOD (290) 52
EQ (291) 38
NEQ (292) 39
LT (293) 40
GT (294) 41
LTE (295) 42
GTE (296) 43
SEMICOLON (297) 4 6 12
COLON (298) 7 8
COMMA (299) 10 23 45
L_PAREN (300) 36 37 57 58 59 60
R_PAREN (301) 36 37 57 58 59 60
L_SQUARE_BRACKET (302) 8 25
R_SQUARE_BRACKET (303) 8 25
ASSIGN (304) 13
NUMBER (305) 8 55 56
ERROR (306)
UMINUS (307)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
prog_start (54)
    on left: 1, on right: 0
program (55)
    on left: 2 3, on right: 1 3
function (56)
    on left: 4, on right: 3
declarations (57)
    on left: 5 6, on right: 4 6
declaration (58)
    on left: 7 8, on right: 6
identifiers (59)
    on left: 9 10, on right: 7 8 10
statements (60)
    on left: 11 12, on right: 4 12 14 15 16 17
statement (61)
    on left: 13 14 15 16 17 18 19 20 21, on right: 12
vars (62)
    on left: 22 23, on right: 18 19 23
var (63)
    on left: 24 25, on right: 13 22 23 53 54
bool_exp (64)
    on left: 26 27, on right: 14 15 16 17 36 37
relation_and_exp (65)
    on left: 28 29, on right: 26 27 29
relation_exp (66)
    on left: 30 31 32 33 34 35 36 37, on right: 28 29
comp (67)
    on left: 38 39 40 41 42 43, on right: 30 31
expressions (68)
    on left: 44 45, on right: 45 60
expression (69)
    on left: 46 47 48, on right: 13 21 25 30 31 44 45 47 48 57 58
multiplicative_expression (70)
    on left: 49 50 51 52, on right: 46 47 48 50 51 52
term (71)
    on left: 53 54 55 56 57 58 59 60, on right: 49 50 51 52


State 0

    0 $accept: . prog_start "end of file"

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (program)

    prog_start  go to state 2
    program     go to state 3
    function    go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: prog_start . "end of file"

    "end of file"  shift, and go to state 6


State 3

    1 prog_start: program .

    $default  reduce using rule 1 (prog_start)


State 4

    3 program: function . program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (program)

    program   go to state 7
    function  go to state 4


State 5

    4 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: prog_start "end of file" .

    $default  accept


State 7

    3 program: function program .

    $default  reduce using rule 3 (program)


State 8

    4 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 11
    declaration   go to state 12
    identifiers   go to state 13


State 10

    9 identifiers: IDENT .
   10            | IDENT . COMMA identifiers

    COMMA  shift, and go to state 14

    $default  reduce using rule 9 (identifiers)


State 11

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 15


State 12

    6 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 16


State 13

    7 declaration: identifiers . COLON INTEGER
    8            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 17


State 14

   10 identifiers: IDENT COMMA . identifiers

    IDENT  shift, and go to state 10

    identifiers  go to state 18


State 15

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 19


State 16

    6 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 20
    declaration   go to state 12
    identifiers   go to state 13


State 17

    7 declaration: identifiers COLON . INTEGER
    8            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22


State 18

   10 identifiers: IDENT COMMA identifiers .

    $default  reduce using rule 10 (identifiers)


State 19

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 23
    declaration   go to state 12
    identifiers   go to state 13


State 20

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


State 21

    7 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 7 (declaration)


State 22

    8 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 24


State 23

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 25


State 24

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 26


State 25

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 27


State 26

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 28


State 27

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    $default  reduce using rule 11 (statements)

    statements  go to state 29


State 28

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 30


State 29

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY
   12 statements: statements . statement SEMICOLON

    IDENT     shift, and go to state 31
    END_BODY  shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    statement  go to state 40
    var        go to state 41


State 30

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 42


State 31

   24 var: IDENT .
   25    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 43

    $default  reduce using rule 24 (var)


State 32

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 33

   14 statement: IF . bool_exp THEN statements ENDIF
   15          | IF . bool_exp THEN statements ELSE statements ENDIF

    IDENT    shift, and go to state 44
    NOT      shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 49
    NUMBER   shift, and go to state 50

    var                        go to state 51
    bool_exp                   go to state 52
    relation_and_exp           go to state 53
    relation_exp               go to state 54
    expression                 go to state 55
    multiplicative_expression  go to state 56
    term                       go to state 57


State 34

   16 statement: WHILE . bool_exp BEGINLOOP statements ENDLOOP

    IDENT    shift, and go to state 44
    NOT      shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 49
    NUMBER   shift, and go to state 50

    var                        go to state 51
    bool_exp                   go to state 58
    relation_and_exp           go to state 53
    relation_exp               go to state 54
    expression                 go to state 55
    multiplicative_expression  go to state 56
    term                       go to state 57


State 35

   17 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 59


State 36

   20 statement: CONTINUE .

    $default  reduce using rule 20 (statement)


State 37

   18 statement: READ . vars

    IDENT  shift, and go to state 31

    vars  go to state 60
    var   go to state 61


State 38

   19 statement: WRITE . vars

    IDENT  shift, and go to state 31

    vars  go to state 62
    var   go to state 61


State 39

   21 statement: RETURN . expression

    IDENT    shift, and go to state 44
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 63
    NUMBER   shift, and go to state 50

    var                        go to state 51
    expression                 go to state 64
    multiplicative_expression  go to state 56
    term                       go to state 57


State 40

   12 statements: statements statement . SEMICOLON

    SEMICOLON  shift, and go to state 65


State 41

   13 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 66


State 42

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 8 (declaration)


State 43

   25 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 44
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 63
    NUMBER   shift, and go to state 50

    var                        go to state 51
    expression                 go to state 67
    multiplicative_expression  go to state 56
    term                       go to state 57


State 44

   24 var: IDENT .
   25    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   59 term: IDENT . L_PAREN R_PAREN
   60     | IDENT . L_PAREN expressions R_PAREN

    L_PAREN           shift, and go to state 68
    L_SQUARE_BRACKET  shift, and go to state 43

    $default  reduce using rule 24 (var)


State 45

   31 relation_exp: NOT . expression comp expression
   33             | NOT . TRUE
   35             | NOT . FALSE
   37             | NOT . L_PAREN bool_exp R_PAREN

    IDENT    shift, and go to state 44
    TRUE     shift, and go to state 69
    FALSE    shift, and go to state 70
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 71
    NUMBER   shift, and go to state 50

    var                        go to state 51
    expression                 go to state 72
    multiplicative_expression  go to state 56
    term                       go to state 57


State 46

   32 relation_exp: TRUE .

    $default  reduce using rule 32 (relation_exp)


State 47

   34 relation_exp: FALSE .

    $default  reduce using rule 34 (relation_exp)


State 48

   54 term: SUB . var
   56     | SUB . NUMBER
   58     | SUB . L_PAREN expression R_PAREN

    IDENT    shift, and go to state 31
    L_PAREN  shift, and go to state 73
    NUMBER   shift, and go to state 74

    var  go to state 75


State 49

   36 relation_exp: L_PAREN . bool_exp R_PAREN
   57 term: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 44
    NOT      shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 49
    NUMBER   shift, and go to state 50

    var                        go to state 51
    bool_exp                   go to state 76
    relation_and_exp           go to state 53
    relation_exp               go to state 54
    expression                 go to state 77
    multiplicative_expression  go to state 56
    term                       go to state 57


State 50

   55 term: NUMBER .

    $default  reduce using rule 55 (term)


State 51

   53 term: var .

    $default  reduce using rule 53 (term)


State 52

   14 statement: IF bool_exp . THEN statements ENDIF
   15          | IF bool_exp . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 78


State 53

   26 bool_exp: relation_and_exp .
   27         | relation_and_exp . OR relation_and_exp
   29 relation_and_exp: relation_and_exp . AND relation_exp

    AND  shift, and go to state 79
    OR   shift, and go to state 80

    $default  reduce using rule 26 (bool_exp)


State 54

   28 relation_and_exp: relation_exp .

    $default  reduce using rule 28 (relation_and_exp)


State 55

   30 relation_exp: expression . comp expression
   47 expression: expression . ADD multiplicative_expression
   48           | expression . SUB multiplicative_expression

    SUB  shift, and go to state 81
    ADD  shift, and go to state 82
    EQ   shift, and go to state 83
    NEQ  shift, and go to state 84
    LT   shift, and go to state 85
    GT   shift, and go to state 86
    LTE  shift, and go to state 87
    GTE  shift, and go to state 88

    comp  go to state 89


State 56

   46 expression: multiplicative_expression .
   50 multiplicative_expression: multiplicative_expression . MULT term
   51                          | multiplicative_expression . DIV term
   52                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 90
    DIV   shift, and go to state 91
    MOD   shift, and go to state 92

    $default  reduce using rule 46 (expression)


State 57

   49 multiplicative_expression: term .

    $default  reduce using rule 49 (multiplicative_expression)


State 58

   16 statement: WHILE bool_exp . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 93


State 59

   17 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_exp

    $default  reduce using rule 11 (statements)

    statements  go to state 94


State 60

   18 statement: READ vars .
   23 vars: vars . COMMA var

    COMMA  shift, and go to state 95

    $default  reduce using rule 18 (statement)


State 61

   22 vars: var .

    $default  reduce using rule 22 (vars)


State 62

   19 statement: WRITE vars .
   23 vars: vars . COMMA var

    COMMA  shift, and go to state 95

    $default  reduce using rule 19 (statement)


State 63

   57 term: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 44
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 63
    NUMBER   shift, and go to state 50

    var                        go to state 51
    expression                 go to state 96
    multiplicative_expression  go to state 56
    term                       go to state 57


State 64

   21 statement: RETURN expression .
   47 expression: expression . ADD multiplicative_expression
   48           | expression . SUB multiplicative_expression

    SUB  shift, and go to state 81
    ADD  shift, and go to state 82

    $default  reduce using rule 21 (statement)


State 65

   12 statements: statements statement SEMICOLON .

    $default  reduce using rule 12 (statements)


State 66

   13 statement: var ASSIGN . expression

    IDENT    shift, and go to state 44
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 63
    NUMBER   shift, and go to state 50

    var                        go to state 51
    expression                 go to state 97
    multiplicative_expression  go to state 56
    term                       go to state 57


State 67

   25 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET
   47 expression: expression . ADD multiplicative_expression
   48           | expression . SUB multiplicative_expression

    SUB               shift, and go to state 81
    ADD               shift, and go to state 82
    R_SQUARE_BRACKET  shift, and go to state 98


State 68

   59 term: IDENT L_PAREN . R_PAREN
   60     | IDENT L_PAREN . expressions R_PAREN

    IDENT    shift, and go to state 44
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 63
    R_PAREN  shift, and go to state 99
    NUMBER   shift, and go to state 50

    var                        go to state 51
    expressions                go to state 100
    expression                 go to state 101
    multiplicative_expression  go to state 56
    term                       go to state 57


State 69

   33 relation_exp: NOT TRUE .

    $default  reduce using rule 33 (relation_exp)


State 70

   35 relation_exp: NOT FALSE .

    $default  reduce using rule 35 (relation_exp)


State 71

   37 relation_exp: NOT L_PAREN . bool_exp R_PAREN
   57 term: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 44
    NOT      shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 49
    NUMBER   shift, and go to state 50

    var                        go to state 51
    bool_exp                   go to state 102
    relation_and_exp           go to state 53
    relation_exp               go to state 54
    expression                 go to state 77
    multiplicative_expression  go to state 56
    term                       go to state 57


State 72

   31 relation_exp: NOT expression . comp expression
   47 expression: expression . ADD multiplicative_expression
   48           | expression . SUB multiplicative_expression

    SUB  shift, and go to state 81
    ADD  shift, and go to state 82
    EQ   shift, and go to state 83
    NEQ  shift, and go to state 84
    LT   shift, and go to state 85
    GT   shift, and go to state 86
    LTE  shift, and go to state 87
    GTE  shift, and go to state 88

    comp  go to state 103


State 73

   58 term: SUB L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 44
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 63
    NUMBER   shift, and go to state 50

    var                        go to state 51
    expression                 go to state 104
    multiplicative_expression  go to state 56
    term                       go to state 57


State 74

   56 term: SUB NUMBER .

    $default  reduce using rule 56 (term)


State 75

   54 term: SUB var .

    $default  reduce using rule 54 (term)


State 76

   36 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 105


State 77

   30 relation_exp: expression . comp expression
   47 expression: expression . ADD multiplicative_expression
   48           | expression . SUB multiplicative_expression
   57 term: L_PAREN expression . R_PAREN

    SUB      shift, and go to state 81
    ADD      shift, and go to state 82
    EQ       shift, and go to state 83
    NEQ      shift, and go to state 84
    LT       shift, and go to state 85
    GT       shift, and go to state 86
    LTE      shift, and go to state 87
    GTE      shift, and go to state 88
    R_PAREN  shift, and go to state 106

    comp  go to state 89


State 78

   14 statement: IF bool_exp THEN . statements ENDIF
   15          | IF bool_exp THEN . statements ELSE statements ENDIF

    $default  reduce using rule 11 (statements)

    statements  go to state 107


State 79

   29 relation_and_exp: relation_and_exp AND . relation_exp

    IDENT    shift, and go to state 44
    NOT      shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 49
    NUMBER   shift, and go to state 50

    var                        go to state 51
    relation_exp               go to state 108
    expression                 go to state 55
    multiplicative_expression  go to state 56
    term                       go to state 57


State 80

   27 bool_exp: relation_and_exp OR . relation_and_exp

    IDENT    shift, and go to state 44
    NOT      shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 49
    NUMBER   shift, and go to state 50

    var                        go to state 51
    relation_and_exp           go to state 109
    relation_exp               go to state 54
    expression                 go to state 55
    multiplicative_expression  go to state 56
    term                       go to state 57


State 81

   48 expression: expression SUB . multiplicative_expression

    IDENT    shift, and go to state 44
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 63
    NUMBER   shift, and go to state 50

    var                        go to state 51
    multiplicative_expression  go to state 110
    term                       go to state 57


State 82

   47 expression: expression ADD . multiplicative_expression

    IDENT    shift, and go to state 44
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 63
    NUMBER   shift, and go to state 50

    var                        go to state 51
    multiplicative_expression  go to state 111
    term                       go to state 57


State 83

   38 comp: EQ .

    $default  reduce using rule 38 (comp)


State 84

   39 comp: NEQ .

    $default  reduce using rule 39 (comp)


State 85

   40 comp: LT .

    $default  reduce using rule 40 (comp)


State 86

   41 comp: GT .

    $default  reduce using rule 41 (comp)


State 87

   42 comp: LTE .

    $default  reduce using rule 42 (comp)


State 88

   43 comp: GTE .

    $default  reduce using rule 43 (comp)


State 89

   30 relation_exp: expression comp . expression

    IDENT    shift, and go to state 44
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 63
    NUMBER   shift, and go to state 50

    var                        go to state 51
    expression                 go to state 112
    multiplicative_expression  go to state 56
    term                       go to state 57


State 90

   50 multiplicative_expression: multiplicative_expression MULT . term

    IDENT    shift, and go to state 44
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 63
    NUMBER   shift, and go to state 50

    var   go to state 51
    term  go to state 113


State 91

   51 multiplicative_expression: multiplicative_expression DIV . term

    IDENT    shift, and go to state 44
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 63
    NUMBER   shift, and go to state 50

    var   go to state 51
    term  go to state 114


State 92

   52 multiplicative_expression: multiplicative_expression MOD . term

    IDENT    shift, and go to state 44
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 63
    NUMBER   shift, and go to state 50

    var   go to state 51
    term  go to state 115


State 93

   16 statement: WHILE bool_exp BEGINLOOP . statements ENDLOOP

    $default  reduce using rule 11 (statements)

    statements  go to state 116


State 94

   12 statements: statements . statement SEMICOLON
   17 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_exp

    IDENT     shift, and go to state 31
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    ENDLOOP   shift, and go to state 117
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    statement  go to state 40
    var        go to state 41


State 95

   23 vars: vars COMMA . var

    IDENT  shift, and go to state 31

    var  go to state 118


State 96

   47 expression: expression . ADD multiplicative_expression
   48           | expression . SUB multiplicative_expression
   57 term: L_PAREN expression . R_PAREN

    SUB      shift, and go to state 81
    ADD      shift, and go to state 82
    R_PAREN  shift, and go to state 106


State 97

   13 statement: var ASSIGN expression .
   47 expression: expression . ADD multiplicative_expression
   48           | expression . SUB multiplicative_expression

    SUB  shift, and go to state 81
    ADD  shift, and go to state 82

    $default  reduce using rule 13 (statement)


State 98

   25 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 25 (var)


State 99

   59 term: IDENT L_PAREN R_PAREN .

    $default  reduce using rule 59 (term)


State 100

   45 expressions: expressions . COMMA expression
   60 term: IDENT L_PAREN expressions . R_PAREN

    COMMA    shift, and go to state 119
    R_PAREN  shift, and go to state 120


State 101

   44 expressions: expression .
   47 expression: expression . ADD multiplicative_expression
   48           | expression . SUB multiplicative_expression

    SUB  shift, and go to state 81
    ADD  shift, and go to state 82

    $default  reduce using rule 44 (expressions)


State 102

   37 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 121


State 103

   31 relation_exp: NOT expression comp . expression

    IDENT    shift, and go to state 44
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 63
    NUMBER   shift, and go to state 50

    var                        go to state 51
    expression                 go to state 122
    multiplicative_expression  go to state 56
    term                       go to state 57


State 104

   47 expression: expression . ADD multiplicative_expression
   48           | expression . SUB multiplicative_expression
   58 term: SUB L_PAREN expression . R_PAREN

    SUB      shift, and go to state 81
    ADD      shift, and go to state 82
    R_PAREN  shift, and go to state 123


State 105

   36 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 36 (relation_exp)


State 106

   57 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 57 (term)


State 107

   12 statements: statements . statement SEMICOLON
   14 statement: IF bool_exp THEN statements . ENDIF
   15          | IF bool_exp THEN statements . ELSE statements ENDIF

    IDENT     shift, and go to state 31
    IF        shift, and go to state 33
    ENDIF     shift, and go to state 124
    ELSE      shift, and go to state 125
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    statement  go to state 40
    var        go to state 41


State 108

   29 relation_and_exp: relation_and_exp AND relation_exp .

    $default  reduce using rule 29 (relation_and_exp)


State 109

   27 bool_exp: relation_and_exp OR relation_and_exp .
   29 relation_and_exp: relation_and_exp . AND relation_exp

    AND  shift, and go to state 79

    $default  reduce using rule 27 (bool_exp)


State 110

   48 expression: expression SUB multiplicative_expression .
   50 multiplicative_expression: multiplicative_expression . MULT term
   51                          | multiplicative_expression . DIV term
   52                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 90
    DIV   shift, and go to state 91
    MOD   shift, and go to state 92

    $default  reduce using rule 48 (expression)


State 111

   47 expression: expression ADD multiplicative_expression .
   50 multiplicative_expression: multiplicative_expression . MULT term
   51                          | multiplicative_expression . DIV term
   52                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 90
    DIV   shift, and go to state 91
    MOD   shift, and go to state 92

    $default  reduce using rule 47 (expression)


State 112

   30 relation_exp: expression comp expression .
   47 expression: expression . ADD multiplicative_expression
   48           | expression . SUB multiplicative_expression

    SUB  shift, and go to state 81
    ADD  shift, and go to state 82

    $default  reduce using rule 30 (relation_exp)


State 113

   50 multiplicative_expression: multiplicative_expression MULT term .

    $default  reduce using rule 50 (multiplicative_expression)


State 114

   51 multiplicative_expression: multiplicative_expression DIV term .

    $default  reduce using rule 51 (multiplicative_expression)


State 115

   52 multiplicative_expression: multiplicative_expression MOD term .

    $default  reduce using rule 52 (multiplicative_expression)


State 116

   12 statements: statements . statement SEMICOLON
   16 statement: WHILE bool_exp BEGINLOOP statements . ENDLOOP

    IDENT     shift, and go to state 31
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    ENDLOOP   shift, and go to state 126
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    statement  go to state 40
    var        go to state 41


State 117

   17 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 127


State 118

   23 vars: vars COMMA var .

    $default  reduce using rule 23 (vars)


State 119

   45 expressions: expressions COMMA . expression

    IDENT    shift, and go to state 44
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 63
    NUMBER   shift, and go to state 50

    var                        go to state 51
    expression                 go to state 128
    multiplicative_expression  go to state 56
    term                       go to state 57


State 120

   60 term: IDENT L_PAREN expressions R_PAREN .

    $default  reduce using rule 60 (term)


State 121

   37 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 37 (relation_exp)


State 122

   31 relation_exp: NOT expression comp expression .
   47 expression: expression . ADD multiplicative_expression
   48           | expression . SUB multiplicative_expression

    SUB  shift, and go to state 81
    ADD  shift, and go to state 82

    $default  reduce using rule 31 (relation_exp)


State 123

   58 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 58 (term)


State 124

   14 statement: IF bool_exp THEN statements ENDIF .

    $default  reduce using rule 14 (statement)


State 125

   15 statement: IF bool_exp THEN statements ELSE . statements ENDIF

    $default  reduce using rule 11 (statements)

    statements  go to state 129


State 126

   16 statement: WHILE bool_exp BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 16 (statement)


State 127

   17 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_exp

    IDENT    shift, and go to state 44
    NOT      shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 49
    NUMBER   shift, and go to state 50

    var                        go to state 51
    bool_exp                   go to state 130
    relation_and_exp           go to state 53
    relation_exp               go to state 54
    expression                 go to state 55
    multiplicative_expression  go to state 56
    term                       go to state 57


State 128

   45 expressions: expressions COMMA expression .
   47 expression: expression . ADD multiplicative_expression
   48           | expression . SUB multiplicative_expression

    SUB  shift, and go to state 81
    ADD  shift, and go to state 82

    $default  reduce using rule 45 (expressions)


State 129

   12 statements: statements . statement SEMICOLON
   15 statement: IF bool_exp THEN statements ELSE statements . ENDIF

    IDENT     shift, and go to state 31
    IF        shift, and go to state 33
    ENDIF     shift, and go to state 131
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    statement  go to state 40
    var        go to state 41


State 130

   17 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_exp .

    $default  reduce using rule 17 (statement)


State 131

   15 statement: IF bool_exp THEN statements ELSE statements ENDIF .

    $default  reduce using rule 15 (statement)
