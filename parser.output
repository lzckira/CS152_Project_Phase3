Terminals unused in grammar

   ERROR


State 29 conflicts: 8 shift/reduce
State 46 conflicts: 1 shift/reduce
State 63 conflicts: 8 shift/reduce
State 71 conflicts: 8 shift/reduce
State 87 conflicts: 8 shift/reduce
State 111 conflicts: 8 shift/reduce
State 115 conflicts: 8 shift/reduce
State 133 conflicts: 4 reduce/reduce
State 134 conflicts: 4 reduce/reduce
State 149 conflicts: 8 shift/reduce
State 157 conflicts: 4 reduce/reduce


Grammar

    0 $accept: prog_start "end of file"

    1 prog_start: program

    2 program: %empty
    3        | function program

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: %empty
    6             | declarations declaration SEMICOLON
    7             | declarations declaration

    8 declaration: identifiers COLON INTEGER
    9            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | identifiers INTEGER
   11            | identifiers ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   12 identifiers: IDENT
   13            | IDENT COMMA identifiers

   14 statements: %empty
   15           | statement SEMICOLON statements
   16           | statements statement

   17 statement: var ASSIGN expression
   18          | IF bool_exp THEN statements ENDIF
   19          | IF bool_exp THEN statements ELSE statements ENDIF
   20          | WHILE bool_exp BEGINLOOP statements ENDLOOP
   21          | DO BEGINLOOP statements ENDLOOP WHILE bool_exp
   22          | READ vars
   23          | WRITE vars
   24          | CONTINUE
   25          | RETURN expression
   26          | var error expression

   27 vars: var
   28     | var COMMA vars

   29 var: IDENT
   30    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   31 bool_exp: relation_and_exp
   32         | relation_and_exp relation_and_exps

   33 relation_and_exps: OR relation_and_exp
   34                  | OR relation_and_exp relation_and_exps

   35 relation_and_exp: relation_exp
   36                 | relation_exp relation_exps

   37 relation_exps: AND relation_exp
   38              | AND relation_exp relation_exps

   39 relation_exp: expression comp expression
   40             | NOT expression comp expression
   41             | TRUE
   42             | NOT TRUE
   43             | FALSE
   44             | NOT FALSE
   45             | L_PAREN bool_exp R_PAREN
   46             | NOT L_PAREN bool_exp R_PAREN

   47 comp: EQ
   48     | NEQ
   49     | LT
   50     | GT
   51     | LTE
   52     | GTE

   53 expressions: expression
   54            | expression COMMA expressions

   55 expression: multiplicative_expression
   56           | multiplicative_expressions multiplicative_expression

   57 multiplicative_expressions: multiplicative_expression ADD
   58                           | multiplicative_expression SUB
   59                           | multiplicative_expressions ADD multiplicative_expression
   60                           | multiplicative_expressions SUB multiplicative_expression

   61 multiplicative_expression: term
   62                          | terms term

   63 terms: term MULT
   64      | term DIV
   65      | term MOD
   66      | terms MULT term
   67      | terms DIV term
   68      | terms MOD term

   69 term: var
   70     | SUB var
   71     | NUMBER
   72     | SUB NUMBER
   73     | L_PAREN expression R_PAREN
   74     | SUB L_PAREN expression R_PAREN
   75     | IDENT L_PAREN R_PAREN
   76     | IDENT L_PAREN expressions R_PAREN


Terminals, with rules where they appear

"end of file" (0) 0
error (256) 26
FUNCTION (258) 4
IDENT (259) 4 12 13 29 30 75 76
BEGIN_PARAMS (260) 4
END_PARAMS (261) 4
BEGIN_LOCALS (262) 4
END_LOCALS (263) 4
BEGIN_BODY (264) 4
END_BODY (265) 4
INTEGER (266) 8 9 10 11
ARRAY (267) 9 11
OF (268) 9 11
IF (269) 18 19
THEN (270) 18 19
ENDIF (271) 18 19
ELSE (272) 19
WHILE (273) 20 21
DO (274) 21
BEGINLOOP (275) 20 21
ENDLOOP (276) 20 21
CONTINUE (277) 24
READ (278) 22
WRITE (279) 23
AND (280) 37 38
OR (281) 33 34
NOT (282) 40 42 44 46
TRUE (283) 41 42
FALSE (284) 43 44
RETURN (285) 25
SUB (286) 58 60 70 72 74
ADD (287) 57 59
MULT (288) 63 66
DIV (289) 64 67
MOD (290) 65 68
EQ (291) 47
NEQ (292) 48
LT (293) 49
GT (294) 50
LTE (295) 51
GTE (296) 52
SEMICOLON (297) 4 6 15
COLON (298) 8 9
COMMA (299) 13 28 54
L_PAREN (300) 45 46 73 74 75 76
R_PAREN (301) 45 46 73 74 75 76
L_SQUARE_BRACKET (302) 9 11 30
R_SQUARE_BRACKET (303) 9 11 30
ASSIGN (304) 17
NUMBER (305) 9 11 71 72
ERROR (306)
UMINUS (307)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
prog_start (54)
    on left: 1, on right: 0
program (55)
    on left: 2 3, on right: 1 3
function (56)
    on left: 4, on right: 3
declarations (57)
    on left: 5 6 7, on right: 4 6 7
declaration (58)
    on left: 8 9 10 11, on right: 6 7
identifiers (59)
    on left: 12 13, on right: 8 9 10 11 13
statements (60)
    on left: 14 15 16, on right: 4 15 16 18 19 20 21
statement (61)
    on left: 17 18 19 20 21 22 23 24 25 26, on right: 15 16
vars (62)
    on left: 27 28, on right: 22 23 28
var (63)
    on left: 29 30, on right: 17 26 27 28 69 70
bool_exp (64)
    on left: 31 32, on right: 18 19 20 21 45 46
relation_and_exps (65)
    on left: 33 34, on right: 32 34
relation_and_exp (66)
    on left: 35 36, on right: 31 32 33 34
relation_exps (67)
    on left: 37 38, on right: 36 38
relation_exp (68)
    on left: 39 40 41 42 43 44 45 46, on right: 35 36 37 38
comp (69)
    on left: 47 48 49 50 51 52, on right: 39 40
expressions (70)
    on left: 53 54, on right: 54 76
expression (71)
    on left: 55 56, on right: 17 25 26 30 39 40 53 54 73 74
multiplicative_expressions (72)
    on left: 57 58 59 60, on right: 56 59 60
multiplicative_expression (73)
    on left: 61 62, on right: 55 56 57 58 59 60
terms (74)
    on left: 63 64 65 66 67 68, on right: 62 66 67 68
term (75)
    on left: 69 70 71 72 73 74 75 76, on right: 61 62 63 64 65 66 67
    68


State 0

    0 $accept: . prog_start "end of file"

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (program)

    prog_start  go to state 2
    program     go to state 3
    function    go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: prog_start . "end of file"

    "end of file"  shift, and go to state 6


State 3

    1 prog_start: program .

    $default  reduce using rule 1 (prog_start)


State 4

    3 program: function . program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (program)

    program   go to state 7
    function  go to state 4


State 5

    4 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: prog_start "end of file" .

    $default  accept


State 7

    3 program: function program .

    $default  reduce using rule 3 (program)


State 8

    4 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 5 (declarations)

    declarations  go to state 10


State 10

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY
    6 declarations: declarations . declaration SEMICOLON
    7             | declarations . declaration

    IDENT       shift, and go to state 11
    END_PARAMS  shift, and go to state 12

    declaration  go to state 13
    identifiers  go to state 14


State 11

   12 identifiers: IDENT .
   13            | IDENT . COMMA identifiers

    COMMA  shift, and go to state 15

    $default  reduce using rule 12 (identifiers)


State 12

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 16


State 13

    6 declarations: declarations declaration . SEMICOLON
    7             | declarations declaration .

    SEMICOLON  shift, and go to state 17

    $default  reduce using rule 7 (declarations)


State 14

    8 declaration: identifiers . COLON INTEGER
    9            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | identifiers . INTEGER
   11            | identifiers . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 18
    ARRAY    shift, and go to state 19
    COLON    shift, and go to state 20


State 15

   13 identifiers: IDENT COMMA . identifiers

    IDENT  shift, and go to state 11

    identifiers  go to state 21


State 16

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 5 (declarations)

    declarations  go to state 22


State 17

    6 declarations: declarations declaration SEMICOLON .

    $default  reduce using rule 6 (declarations)


State 18

   10 declaration: identifiers INTEGER .

    $default  reduce using rule 10 (declaration)


State 19

   11 declaration: identifiers ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 23


State 20

    8 declaration: identifiers COLON . INTEGER
    9            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 24
    ARRAY    shift, and go to state 25


State 21

   13 identifiers: IDENT COMMA identifiers .

    $default  reduce using rule 13 (identifiers)


State 22

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY
    6 declarations: declarations . declaration SEMICOLON
    7             | declarations . declaration

    IDENT       shift, and go to state 11
    END_LOCALS  shift, and go to state 26

    declaration  go to state 13
    identifiers  go to state 14


State 23

   11 declaration: identifiers ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 27


State 24

    8 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 8 (declaration)


State 25

    9 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 28


State 26

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 29


State 27

   11 declaration: identifiers ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 30


State 28

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 31


State 29

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    IDENT     [reduce using rule 14 (statements)]
    IF        [reduce using rule 14 (statements)]
    WHILE     [reduce using rule 14 (statements)]
    DO        [reduce using rule 14 (statements)]
    CONTINUE  [reduce using rule 14 (statements)]
    READ      [reduce using rule 14 (statements)]
    WRITE     [reduce using rule 14 (statements)]
    RETURN    [reduce using rule 14 (statements)]
    $default  reduce using rule 14 (statements)

    statements  go to state 40
    statement   go to state 41
    var         go to state 42


State 30

   11 declaration: identifiers ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 43


State 31

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 44


State 32

   29 var: IDENT .
   30    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 45

    $default  reduce using rule 29 (var)


State 33

   18 statement: IF . bool_exp THEN statements ENDIF
   19          | IF . bool_exp THEN statements ELSE statements ENDIF

    IDENT    shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52

    var                         go to state 53
    bool_exp                    go to state 54
    relation_and_exp            go to state 55
    relation_exp                go to state 56
    expression                  go to state 57
    multiplicative_expressions  go to state 58
    multiplicative_expression   go to state 59
    terms                       go to state 60
    term                        go to state 61


State 34

   20 statement: WHILE . bool_exp BEGINLOOP statements ENDLOOP

    IDENT    shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52

    var                         go to state 53
    bool_exp                    go to state 62
    relation_and_exp            go to state 55
    relation_exp                go to state 56
    expression                  go to state 57
    multiplicative_expressions  go to state 58
    multiplicative_expression   go to state 59
    terms                       go to state 60
    term                        go to state 61


State 35

   21 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 63


State 36

   24 statement: CONTINUE .

    $default  reduce using rule 24 (statement)


State 37

   22 statement: READ . vars

    IDENT  shift, and go to state 32

    vars  go to state 64
    var   go to state 65


State 38

   23 statement: WRITE . vars

    IDENT  shift, and go to state 32

    vars  go to state 66
    var   go to state 65


State 39

   25 statement: RETURN . expression

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 52

    var                         go to state 53
    expression                  go to state 68
    multiplicative_expressions  go to state 58
    multiplicative_expression   go to state 59
    terms                       go to state 60
    term                        go to state 61


State 40

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY
   16 statements: statements . statement

    IDENT     shift, and go to state 32
    END_BODY  shift, and go to state 69
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    statement  go to state 70
    var        go to state 42


State 41

   15 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 71


State 42

   17 statement: var . ASSIGN expression
   26          | var . error expression

    error   shift, and go to state 72
    ASSIGN  shift, and go to state 73


State 43

   11 declaration: identifiers ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 74


State 44

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 75


State 45

   30 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 52

    var                         go to state 53
    expression                  go to state 76
    multiplicative_expressions  go to state 58
    multiplicative_expression   go to state 59
    terms                       go to state 60
    term                        go to state 61


State 46

   29 var: IDENT .
   30    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   75 term: IDENT . L_PAREN R_PAREN
   76     | IDENT . L_PAREN expressions R_PAREN

    L_PAREN           shift, and go to state 77
    L_SQUARE_BRACKET  shift, and go to state 45

    L_PAREN   [reduce using rule 29 (var)]
    $default  reduce using rule 29 (var)


State 47

   40 relation_exp: NOT . expression comp expression
   42             | NOT . TRUE
   44             | NOT . FALSE
   46             | NOT . L_PAREN bool_exp R_PAREN

    IDENT    shift, and go to state 46
    TRUE     shift, and go to state 78
    FALSE    shift, and go to state 79
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 80
    NUMBER   shift, and go to state 52

    var                         go to state 53
    expression                  go to state 81
    multiplicative_expressions  go to state 58
    multiplicative_expression   go to state 59
    terms                       go to state 60
    term                        go to state 61


State 48

   41 relation_exp: TRUE .

    $default  reduce using rule 41 (relation_exp)


State 49

   43 relation_exp: FALSE .

    $default  reduce using rule 43 (relation_exp)


State 50

   70 term: SUB . var
   72     | SUB . NUMBER
   74     | SUB . L_PAREN expression R_PAREN

    IDENT    shift, and go to state 32
    L_PAREN  shift, and go to state 82
    NUMBER   shift, and go to state 83

    var  go to state 84


State 51

   45 relation_exp: L_PAREN . bool_exp R_PAREN
   73 term: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52

    var                         go to state 53
    bool_exp                    go to state 85
    relation_and_exp            go to state 55
    relation_exp                go to state 56
    expression                  go to state 86
    multiplicative_expressions  go to state 58
    multiplicative_expression   go to state 59
    terms                       go to state 60
    term                        go to state 61


State 52

   71 term: NUMBER .

    $default  reduce using rule 71 (term)


State 53

   69 term: var .

    $default  reduce using rule 69 (term)


State 54

   18 statement: IF bool_exp . THEN statements ENDIF
   19          | IF bool_exp . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 87


State 55

   31 bool_exp: relation_and_exp .
   32         | relation_and_exp . relation_and_exps

    OR  shift, and go to state 88

    $default  reduce using rule 31 (bool_exp)

    relation_and_exps  go to state 89


State 56

   35 relation_and_exp: relation_exp .
   36                 | relation_exp . relation_exps

    AND  shift, and go to state 90

    $default  reduce using rule 35 (relation_and_exp)

    relation_exps  go to state 91


State 57

   39 relation_exp: expression . comp expression

    EQ   shift, and go to state 92
    NEQ  shift, and go to state 93
    LT   shift, and go to state 94
    GT   shift, and go to state 95
    LTE  shift, and go to state 96
    GTE  shift, and go to state 97

    comp  go to state 98


State 58

   56 expression: multiplicative_expressions . multiplicative_expression
   59 multiplicative_expressions: multiplicative_expressions . ADD multiplicative_expression
   60                           | multiplicative_expressions . SUB multiplicative_expression

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 99
    ADD      shift, and go to state 100
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 52

    var                        go to state 53
    multiplicative_expression  go to state 101
    terms                      go to state 60
    term                       go to state 61


State 59

   55 expression: multiplicative_expression .
   57 multiplicative_expressions: multiplicative_expression . ADD
   58                           | multiplicative_expression . SUB

    SUB  shift, and go to state 102
    ADD  shift, and go to state 103

    $default  reduce using rule 55 (expression)


State 60

   62 multiplicative_expression: terms . term
   66 terms: terms . MULT term
   67      | terms . DIV term
   68      | terms . MOD term

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    MULT     shift, and go to state 104
    DIV      shift, and go to state 105
    MOD      shift, and go to state 106
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 52

    var   go to state 53
    term  go to state 107


State 61

   61 multiplicative_expression: term .
   63 terms: term . MULT
   64      | term . DIV
   65      | term . MOD

    MULT  shift, and go to state 108
    DIV   shift, and go to state 109
    MOD   shift, and go to state 110

    $default  reduce using rule 61 (multiplicative_expression)


State 62

   20 statement: WHILE bool_exp . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 111


State 63

   21 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_exp

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    IDENT     [reduce using rule 14 (statements)]
    IF        [reduce using rule 14 (statements)]
    WHILE     [reduce using rule 14 (statements)]
    DO        [reduce using rule 14 (statements)]
    CONTINUE  [reduce using rule 14 (statements)]
    READ      [reduce using rule 14 (statements)]
    WRITE     [reduce using rule 14 (statements)]
    RETURN    [reduce using rule 14 (statements)]
    $default  reduce using rule 14 (statements)

    statements  go to state 112
    statement   go to state 41
    var         go to state 42


State 64

   22 statement: READ vars .

    $default  reduce using rule 22 (statement)


State 65

   27 vars: var .
   28     | var . COMMA vars

    COMMA  shift, and go to state 113

    $default  reduce using rule 27 (vars)


State 66

   23 statement: WRITE vars .

    $default  reduce using rule 23 (statement)


State 67

   73 term: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 52

    var                         go to state 53
    expression                  go to state 114
    multiplicative_expressions  go to state 58
    multiplicative_expression   go to state 59
    terms                       go to state 60
    term                        go to state 61


State 68

   25 statement: RETURN expression .

    $default  reduce using rule 25 (statement)


State 69

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 70

   16 statements: statements statement .

    $default  reduce using rule 16 (statements)


State 71

   15 statements: statement SEMICOLON . statements

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    IDENT     [reduce using rule 14 (statements)]
    IF        [reduce using rule 14 (statements)]
    WHILE     [reduce using rule 14 (statements)]
    DO        [reduce using rule 14 (statements)]
    CONTINUE  [reduce using rule 14 (statements)]
    READ      [reduce using rule 14 (statements)]
    WRITE     [reduce using rule 14 (statements)]
    RETURN    [reduce using rule 14 (statements)]
    $default  reduce using rule 14 (statements)

    statements  go to state 115
    statement   go to state 41
    var         go to state 42


State 72

   26 statement: var error . expression

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 52

    var                         go to state 53
    expression                  go to state 116
    multiplicative_expressions  go to state 58
    multiplicative_expression   go to state 59
    terms                       go to state 60
    term                        go to state 61


State 73

   17 statement: var ASSIGN . expression

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 52

    var                         go to state 53
    expression                  go to state 117
    multiplicative_expressions  go to state 58
    multiplicative_expression   go to state 59
    terms                       go to state 60
    term                        go to state 61


State 74

   11 declaration: identifiers ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 11 (declaration)


State 75

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 118


State 76

   30 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 119


State 77

   75 term: IDENT L_PAREN . R_PAREN
   76     | IDENT L_PAREN . expressions R_PAREN

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    R_PAREN  shift, and go to state 120
    NUMBER   shift, and go to state 52

    var                         go to state 53
    expressions                 go to state 121
    expression                  go to state 122
    multiplicative_expressions  go to state 58
    multiplicative_expression   go to state 59
    terms                       go to state 60
    term                        go to state 61


State 78

   42 relation_exp: NOT TRUE .

    $default  reduce using rule 42 (relation_exp)


State 79

   44 relation_exp: NOT FALSE .

    $default  reduce using rule 44 (relation_exp)


State 80

   46 relation_exp: NOT L_PAREN . bool_exp R_PAREN
   73 term: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52

    var                         go to state 53
    bool_exp                    go to state 123
    relation_and_exp            go to state 55
    relation_exp                go to state 56
    expression                  go to state 86
    multiplicative_expressions  go to state 58
    multiplicative_expression   go to state 59
    terms                       go to state 60
    term                        go to state 61


State 81

   40 relation_exp: NOT expression . comp expression

    EQ   shift, and go to state 92
    NEQ  shift, and go to state 93
    LT   shift, and go to state 94
    GT   shift, and go to state 95
    LTE  shift, and go to state 96
    GTE  shift, and go to state 97

    comp  go to state 124


State 82

   74 term: SUB L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 52

    var                         go to state 53
    expression                  go to state 125
    multiplicative_expressions  go to state 58
    multiplicative_expression   go to state 59
    terms                       go to state 60
    term                        go to state 61


State 83

   72 term: SUB NUMBER .

    $default  reduce using rule 72 (term)


State 84

   70 term: SUB var .

    $default  reduce using rule 70 (term)


State 85

   45 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 126


State 86

   39 relation_exp: expression . comp expression
   73 term: L_PAREN expression . R_PAREN

    EQ       shift, and go to state 92
    NEQ      shift, and go to state 93
    LT       shift, and go to state 94
    GT       shift, and go to state 95
    LTE      shift, and go to state 96
    GTE      shift, and go to state 97
    R_PAREN  shift, and go to state 127

    comp  go to state 98


State 87

   18 statement: IF bool_exp THEN . statements ENDIF
   19          | IF bool_exp THEN . statements ELSE statements ENDIF

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    IDENT     [reduce using rule 14 (statements)]
    IF        [reduce using rule 14 (statements)]
    WHILE     [reduce using rule 14 (statements)]
    DO        [reduce using rule 14 (statements)]
    CONTINUE  [reduce using rule 14 (statements)]
    READ      [reduce using rule 14 (statements)]
    WRITE     [reduce using rule 14 (statements)]
    RETURN    [reduce using rule 14 (statements)]
    $default  reduce using rule 14 (statements)

    statements  go to state 128
    statement   go to state 41
    var         go to state 42


State 88

   33 relation_and_exps: OR . relation_and_exp
   34                  | OR . relation_and_exp relation_and_exps

    IDENT    shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52

    var                         go to state 53
    relation_and_exp            go to state 129
    relation_exp                go to state 56
    expression                  go to state 57
    multiplicative_expressions  go to state 58
    multiplicative_expression   go to state 59
    terms                       go to state 60
    term                        go to state 61


State 89

   32 bool_exp: relation_and_exp relation_and_exps .

    $default  reduce using rule 32 (bool_exp)


State 90

   37 relation_exps: AND . relation_exp
   38              | AND . relation_exp relation_exps

    IDENT    shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52

    var                         go to state 53
    relation_exp                go to state 130
    expression                  go to state 57
    multiplicative_expressions  go to state 58
    multiplicative_expression   go to state 59
    terms                       go to state 60
    term                        go to state 61


State 91

   36 relation_and_exp: relation_exp relation_exps .

    $default  reduce using rule 36 (relation_and_exp)


State 92

   47 comp: EQ .

    $default  reduce using rule 47 (comp)


State 93

   48 comp: NEQ .

    $default  reduce using rule 48 (comp)


State 94

   49 comp: LT .

    $default  reduce using rule 49 (comp)


State 95

   50 comp: GT .

    $default  reduce using rule 50 (comp)


State 96

   51 comp: LTE .

    $default  reduce using rule 51 (comp)


State 97

   52 comp: GTE .

    $default  reduce using rule 52 (comp)


State 98

   39 relation_exp: expression comp . expression

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 52

    var                         go to state 53
    expression                  go to state 131
    multiplicative_expressions  go to state 58
    multiplicative_expression   go to state 59
    terms                       go to state 60
    term                        go to state 61


State 99

   60 multiplicative_expressions: multiplicative_expressions SUB . multiplicative_expression
   70 term: SUB . var
   72     | SUB . NUMBER
   74     | SUB . L_PAREN expression R_PAREN

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 132
    NUMBER   shift, and go to state 133

    var                        go to state 134
    multiplicative_expression  go to state 135
    terms                      go to state 60
    term                       go to state 61


State 100

   59 multiplicative_expressions: multiplicative_expressions ADD . multiplicative_expression

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 52

    var                        go to state 53
    multiplicative_expression  go to state 136
    terms                      go to state 60
    term                       go to state 61


State 101

   56 expression: multiplicative_expressions multiplicative_expression .

    $default  reduce using rule 56 (expression)


State 102

   58 multiplicative_expressions: multiplicative_expression SUB .

    $default  reduce using rule 58 (multiplicative_expressions)


State 103

   57 multiplicative_expressions: multiplicative_expression ADD .

    $default  reduce using rule 57 (multiplicative_expressions)


State 104

   66 terms: terms MULT . term

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 52

    var   go to state 53
    term  go to state 137


State 105

   67 terms: terms DIV . term

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 52

    var   go to state 53
    term  go to state 138


State 106

   68 terms: terms MOD . term

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 52

    var   go to state 53
    term  go to state 139


State 107

   62 multiplicative_expression: terms term .

    $default  reduce using rule 62 (multiplicative_expression)


State 108

   63 terms: term MULT .

    $default  reduce using rule 63 (terms)


State 109

   64 terms: term DIV .

    $default  reduce using rule 64 (terms)


State 110

   65 terms: term MOD .

    $default  reduce using rule 65 (terms)


State 111

   20 statement: WHILE bool_exp BEGINLOOP . statements ENDLOOP

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    IDENT     [reduce using rule 14 (statements)]
    IF        [reduce using rule 14 (statements)]
    WHILE     [reduce using rule 14 (statements)]
    DO        [reduce using rule 14 (statements)]
    CONTINUE  [reduce using rule 14 (statements)]
    READ      [reduce using rule 14 (statements)]
    WRITE     [reduce using rule 14 (statements)]
    RETURN    [reduce using rule 14 (statements)]
    $default  reduce using rule 14 (statements)

    statements  go to state 140
    statement   go to state 41
    var         go to state 42


State 112

   16 statements: statements . statement
   21 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_exp

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    ENDLOOP   shift, and go to state 141
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    statement  go to state 70
    var        go to state 42


State 113

   28 vars: var COMMA . vars

    IDENT  shift, and go to state 32

    vars  go to state 142
    var   go to state 65


State 114

   73 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 127


State 115

   15 statements: statement SEMICOLON statements .
   16           | statements . statement

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    IDENT     [reduce using rule 15 (statements)]
    IF        [reduce using rule 15 (statements)]
    WHILE     [reduce using rule 15 (statements)]
    DO        [reduce using rule 15 (statements)]
    CONTINUE  [reduce using rule 15 (statements)]
    READ      [reduce using rule 15 (statements)]
    WRITE     [reduce using rule 15 (statements)]
    RETURN    [reduce using rule 15 (statements)]
    $default  reduce using rule 15 (statements)

    statement  go to state 70
    var        go to state 42


State 116

   26 statement: var error expression .

    $default  reduce using rule 26 (statement)


State 117

   17 statement: var ASSIGN expression .

    $default  reduce using rule 17 (statement)


State 118

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 9 (declaration)


State 119

   30 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 30 (var)


State 120

   75 term: IDENT L_PAREN R_PAREN .

    $default  reduce using rule 75 (term)


State 121

   76 term: IDENT L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 143


State 122

   53 expressions: expression .
   54            | expression . COMMA expressions

    COMMA  shift, and go to state 144

    $default  reduce using rule 53 (expressions)


State 123

   46 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 145


State 124

   40 relation_exp: NOT expression comp . expression

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 52

    var                         go to state 53
    expression                  go to state 146
    multiplicative_expressions  go to state 58
    multiplicative_expression   go to state 59
    terms                       go to state 60
    term                        go to state 61


State 125

   74 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 147


State 126

   45 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 45 (relation_exp)


State 127

   73 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 73 (term)


State 128

   16 statements: statements . statement
   18 statement: IF bool_exp THEN statements . ENDIF
   19          | IF bool_exp THEN statements . ELSE statements ENDIF

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    ENDIF     shift, and go to state 148
    ELSE      shift, and go to state 149
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    statement  go to state 70
    var        go to state 42


State 129

   33 relation_and_exps: OR relation_and_exp .
   34                  | OR relation_and_exp . relation_and_exps

    OR  shift, and go to state 88

    $default  reduce using rule 33 (relation_and_exps)

    relation_and_exps  go to state 150


State 130

   37 relation_exps: AND relation_exp .
   38              | AND relation_exp . relation_exps

    AND  shift, and go to state 90

    $default  reduce using rule 37 (relation_exps)

    relation_exps  go to state 151


State 131

   39 relation_exp: expression comp expression .

    $default  reduce using rule 39 (relation_exp)


State 132

   73 term: L_PAREN . expression R_PAREN
   74     | SUB L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 52

    var                         go to state 53
    expression                  go to state 152
    multiplicative_expressions  go to state 58
    multiplicative_expression   go to state 59
    terms                       go to state 60
    term                        go to state 61


State 133

   71 term: NUMBER .
   72     | SUB NUMBER .

    IDENT     reduce using rule 71 (term)
    IDENT     [reduce using rule 72 (term)]
    SUB       reduce using rule 71 (term)
    ADD       reduce using rule 71 (term)
    MULT      reduce using rule 71 (term)
    MULT      [reduce using rule 72 (term)]
    DIV       reduce using rule 71 (term)
    DIV       [reduce using rule 72 (term)]
    MOD       reduce using rule 71 (term)
    MOD       [reduce using rule 72 (term)]
    L_PAREN   reduce using rule 71 (term)
    NUMBER    reduce using rule 71 (term)
    $default  reduce using rule 72 (term)


State 134

   69 term: var .
   70     | SUB var .

    IDENT     reduce using rule 69 (term)
    IDENT     [reduce using rule 70 (term)]
    SUB       reduce using rule 69 (term)
    ADD       reduce using rule 69 (term)
    MULT      reduce using rule 69 (term)
    MULT      [reduce using rule 70 (term)]
    DIV       reduce using rule 69 (term)
    DIV       [reduce using rule 70 (term)]
    MOD       reduce using rule 69 (term)
    MOD       [reduce using rule 70 (term)]
    L_PAREN   reduce using rule 69 (term)
    NUMBER    reduce using rule 69 (term)
    $default  reduce using rule 70 (term)


State 135

   60 multiplicative_expressions: multiplicative_expressions SUB multiplicative_expression .

    $default  reduce using rule 60 (multiplicative_expressions)


State 136

   59 multiplicative_expressions: multiplicative_expressions ADD multiplicative_expression .

    $default  reduce using rule 59 (multiplicative_expressions)


State 137

   66 terms: terms MULT term .

    $default  reduce using rule 66 (terms)


State 138

   67 terms: terms DIV term .

    $default  reduce using rule 67 (terms)


State 139

   68 terms: terms MOD term .

    $default  reduce using rule 68 (terms)


State 140

   16 statements: statements . statement
   20 statement: WHILE bool_exp BEGINLOOP statements . ENDLOOP

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    ENDLOOP   shift, and go to state 153
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    statement  go to state 70
    var        go to state 42


State 141

   21 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 154


State 142

   28 vars: var COMMA vars .

    $default  reduce using rule 28 (vars)


State 143

   76 term: IDENT L_PAREN expressions R_PAREN .

    $default  reduce using rule 76 (term)


State 144

   54 expressions: expression COMMA . expressions

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 52

    var                         go to state 53
    expressions                 go to state 155
    expression                  go to state 122
    multiplicative_expressions  go to state 58
    multiplicative_expression   go to state 59
    terms                       go to state 60
    term                        go to state 61


State 145

   46 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 46 (relation_exp)


State 146

   40 relation_exp: NOT expression comp expression .

    $default  reduce using rule 40 (relation_exp)


State 147

   74 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 74 (term)


State 148

   18 statement: IF bool_exp THEN statements ENDIF .

    $default  reduce using rule 18 (statement)


State 149

   19 statement: IF bool_exp THEN statements ELSE . statements ENDIF

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    IDENT     [reduce using rule 14 (statements)]
    IF        [reduce using rule 14 (statements)]
    WHILE     [reduce using rule 14 (statements)]
    DO        [reduce using rule 14 (statements)]
    CONTINUE  [reduce using rule 14 (statements)]
    READ      [reduce using rule 14 (statements)]
    WRITE     [reduce using rule 14 (statements)]
    RETURN    [reduce using rule 14 (statements)]
    $default  reduce using rule 14 (statements)

    statements  go to state 156
    statement   go to state 41
    var         go to state 42


State 150

   34 relation_and_exps: OR relation_and_exp relation_and_exps .

    $default  reduce using rule 34 (relation_and_exps)


State 151

   38 relation_exps: AND relation_exp relation_exps .

    $default  reduce using rule 38 (relation_exps)


State 152

   73 term: L_PAREN expression . R_PAREN
   74     | SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 157


State 153

   20 statement: WHILE bool_exp BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 20 (statement)


State 154

   21 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_exp

    IDENT    shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52

    var                         go to state 53
    bool_exp                    go to state 158
    relation_and_exp            go to state 55
    relation_exp                go to state 56
    expression                  go to state 57
    multiplicative_expressions  go to state 58
    multiplicative_expression   go to state 59
    terms                       go to state 60
    term                        go to state 61


State 155

   54 expressions: expression COMMA expressions .

    $default  reduce using rule 54 (expressions)


State 156

   16 statements: statements . statement
   19 statement: IF bool_exp THEN statements ELSE statements . ENDIF

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    ENDIF     shift, and go to state 159
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    statement  go to state 70
    var        go to state 42


State 157

   73 term: L_PAREN expression R_PAREN .
   74     | SUB L_PAREN expression R_PAREN .

    IDENT     reduce using rule 73 (term)
    IDENT     [reduce using rule 74 (term)]
    SUB       reduce using rule 73 (term)
    ADD       reduce using rule 73 (term)
    MULT      reduce using rule 73 (term)
    MULT      [reduce using rule 74 (term)]
    DIV       reduce using rule 73 (term)
    DIV       [reduce using rule 74 (term)]
    MOD       reduce using rule 73 (term)
    MOD       [reduce using rule 74 (term)]
    L_PAREN   reduce using rule 73 (term)
    NUMBER    reduce using rule 73 (term)
    $default  reduce using rule 74 (term)


State 158

   21 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_exp .

    $default  reduce using rule 21 (statement)


State 159

   19 statement: IF bool_exp THEN statements ELSE statements ENDIF .

    $default  reduce using rule 19 (statement)
