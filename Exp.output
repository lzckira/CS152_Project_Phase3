Terminals unused in grammar

   ERROR


State 29 conflicts: 8 shift/reduce
State 46 conflicts: 1 shift/reduce
State 61 conflicts: 1 shift/reduce
State 65 conflicts: 8 shift/reduce
State 73 conflicts: 8 shift/reduce
State 89 conflicts: 8 shift/reduce
State 115 conflicts: 8 shift/reduce
State 119 conflicts: 8 shift/reduce
State 137 conflicts: 7 reduce/reduce
State 138 conflicts: 7 reduce/reduce
State 153 conflicts: 8 shift/reduce
State 159 conflicts: 7 reduce/reduce


Grammar

    0 $accept: prog_start "end of file"

    1 prog_start: program

    2 program: %empty
    3        | function program

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: %empty
    6             | declarations declaration SEMICOLON
    7             | declarations declaration

    8 declaration: identifiers COLON INTEGER
    9            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | identifiers INTEGER
   11            | identifiers ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   12 identifiers: IDENT
   13            | identifiers COMMA IDENT

   14 statements: %empty
   15           | statement SEMICOLON statements
   16           | statements statement

   17 statement: var ASSIGN expression
   18          | IF bool_exp THEN statements ENDIF
   19          | IF bool_exp THEN statements ELSE statements ENDIF
   20          | WHILE bool_exp BEGINLOOP statements ENDLOOP
   21          | DO BEGINLOOP statements ENDLOOP WHILE bool_exp
   22          | READ vars
   23          | WRITE vars
   24          | CONTINUE
   25          | RETURN expression
   26          | var error expression

   27 vars: var
   28     | vars COMMA var

   29 var: IDENT
   30    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   31 bool_exp: relation_and_exp
   32         | relation_and_exps relation_and_exp

   33 relation_and_exps: relation_and_exp OR
   34                  | relation_and_exps OR relation_and_exp

   35 relation_and_exp: relation_exp
   36                 | relation_exps relation_exp

   37 relation_exps: relation_exp AND
   38              | relation_exps AND relation_exp

   39 relation_exp: expression comp expression
   40             | NOT expression comp expression
   41             | TRUE
   42             | NOT TRUE
   43             | FALSE
   44             | NOT FALSE
   45             | L_PAREN bool_exp R_PAREN
   46             | NOT L_PAREN bool_exp R_PAREN

   47 comp: EQ
   48     | NEQ
   49     | LT
   50     | GT
   51     | LTE
   52     | GTE

   53 expressions: expression
   54            | expression COMMA expressions

   55 expression: multiplicative_expression
   56           | multiplicative_expressions multiplicative_expression

   57 multiplicative_expressions: multiplicative_expression ADD
   58                           | multiplicative_expression SUB
   59                           | multiplicative_expressions ADD multiplicative_expression
   60                           | multiplicative_expressions SUB multiplicative_expression

   61 multiplicative_expression: term
   62                          | terms term

   63 terms: term MULT
   64      | term DIV
   65      | term MOD
   66      | terms MULT term
   67      | terms DIV term
   68      | terms MOD term

   69 term: var
   70     | SUB var
   71     | NUMBER
   72     | SUB NUMBER
   73     | L_PAREN expression R_PAREN
   74     | SUB L_PAREN expression R_PAREN
   75     | IDENT L_PAREN R_PAREN
   76     | IDENT L_PAREN expressions R_PAREN


Terminals, with rules where they appear

"end of file" (0) 0
error (256) 26
FUNCTION (258) 4
IDENT (259) 4 12 13 29 30 75 76
BEGIN_PARAMS (260) 4
END_PARAMS (261) 4
BEGIN_LOCALS (262) 4
END_LOCALS (263) 4
BEGIN_BODY (264) 4
END_BODY (265) 4
INTEGER (266) 8 9 10 11
ARRAY (267) 9 11
OF (268) 9 11
IF (269) 18 19
THEN (270) 18 19
ENDIF (271) 18 19
ELSE (272) 19
WHILE (273) 20 21
DO (274) 21
BEGINLOOP (275) 20 21
ENDLOOP (276) 20 21
CONTINUE (277) 24
READ (278) 22
WRITE (279) 23
AND (280) 37 38
OR (281) 33 34
NOT (282) 40 42 44 46
TRUE (283) 41 42
FALSE (284) 43 44
RETURN (285) 25
SUB (286) 58 60 70 72 74
ADD (287) 57 59
MULT (288) 63 66
DIV (289) 64 67
MOD (290) 65 68
EQ (291) 47
NEQ (292) 48
LT (293) 49
GT (294) 50
LTE (295) 51
GTE (296) 52
SEMICOLON (297) 4 6 15
COLON (298) 8 9
COMMA (299) 13 28 54
L_PAREN (300) 45 46 73 74 75 76
R_PAREN (301) 45 46 73 74 75 76
L_SQUARE_BRACKET (302) 9 11 30
R_SQUARE_BRACKET (303) 9 11 30
ASSIGN (304) 17
NUMBER (305) 9 11 71 72
ERROR (306)
UMINUS (307)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
prog_start (54)
    on left: 1, on right: 0
program (55)
    on left: 2 3, on right: 1 3
function (56)
    on left: 4, on right: 3
declarations (57)
    on left: 5 6 7, on right: 4 6 7
declaration (58)
    on left: 8 9 10 11, on right: 6 7
identifiers (59)
    on left: 12 13, on right: 8 9 10 11 13
statements (60)
    on left: 14 15 16, on right: 4 15 16 18 19 20 21
statement (61)
    on left: 17 18 19 20 21 22 23 24 25 26, on right: 15 16
vars (62)
    on left: 27 28, on right: 22 23 28
var (63)
    on left: 29 30, on right: 17 26 27 28 69 70
bool_exp (64)
    on left: 31 32, on right: 18 19 20 21 45 46
relation_and_exps (65)
    on left: 33 34, on right: 32 34
relation_and_exp (66)
    on left: 35 36, on right: 31 32 33 34
relation_exps (67)
    on left: 37 38, on right: 36 38
relation_exp (68)
    on left: 39 40 41 42 43 44 45 46, on right: 35 36 37 38
comp (69)
    on left: 47 48 49 50 51 52, on right: 39 40
expressions (70)
    on left: 53 54, on right: 54 76
expression (71)
    on left: 55 56, on right: 17 25 26 30 39 40 53 54 73 74
multiplicative_expressions (72)
    on left: 57 58 59 60, on right: 56 59 60
multiplicative_expression (73)
    on left: 61 62, on right: 55 56 57 58 59 60
terms (74)
    on left: 63 64 65 66 67 68, on right: 62 66 67 68
term (75)
    on left: 69 70 71 72 73 74 75 76, on right: 61 62 63 64 65 66 67
    68


State 0

    0 $accept: . prog_start "end of file"

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (program)

    prog_start  go to state 2
    program     go to state 3
    function    go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: prog_start . "end of file"

    "end of file"  shift, and go to state 6


State 3

    1 prog_start: program .

    $default  reduce using rule 1 (prog_start)


State 4

    3 program: function . program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (program)

    program   go to state 7
    function  go to state 4


State 5

    4 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: prog_start "end of file" .

    $default  accept


State 7

    3 program: function program .

    $default  reduce using rule 3 (program)


State 8

    4 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 5 (declarations)

    declarations  go to state 10


State 10

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY
    6 declarations: declarations . declaration SEMICOLON
    7             | declarations . declaration

    IDENT       shift, and go to state 11
    END_PARAMS  shift, and go to state 12

    declaration  go to state 13
    identifiers  go to state 14


State 11

   12 identifiers: IDENT .

    $default  reduce using rule 12 (identifiers)


State 12

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 15


State 13

    6 declarations: declarations declaration . SEMICOLON
    7             | declarations declaration .

    SEMICOLON  shift, and go to state 16

    $default  reduce using rule 7 (declarations)


State 14

    8 declaration: identifiers . COLON INTEGER
    9            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | identifiers . INTEGER
   11            | identifiers . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   13 identifiers: identifiers . COMMA IDENT

    INTEGER  shift, and go to state 17
    ARRAY    shift, and go to state 18
    COLON    shift, and go to state 19
    COMMA    shift, and go to state 20


State 15

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 5 (declarations)

    declarations  go to state 21


State 16

    6 declarations: declarations declaration SEMICOLON .

    $default  reduce using rule 6 (declarations)


State 17

   10 declaration: identifiers INTEGER .

    $default  reduce using rule 10 (declaration)


State 18

   11 declaration: identifiers ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 22


State 19

    8 declaration: identifiers COLON . INTEGER
    9            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 23
    ARRAY    shift, and go to state 24


State 20

   13 identifiers: identifiers COMMA . IDENT

    IDENT  shift, and go to state 25


State 21

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY
    6 declarations: declarations . declaration SEMICOLON
    7             | declarations . declaration

    IDENT       shift, and go to state 11
    END_LOCALS  shift, and go to state 26

    declaration  go to state 13
    identifiers  go to state 14


State 22

   11 declaration: identifiers ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 27


State 23

    8 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 8 (declaration)


State 24

    9 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 28


State 25

   13 identifiers: identifiers COMMA IDENT .

    $default  reduce using rule 13 (identifiers)


State 26

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 29


State 27

   11 declaration: identifiers ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 30


State 28

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 31


State 29

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    IDENT     [reduce using rule 14 (statements)]
    IF        [reduce using rule 14 (statements)]
    WHILE     [reduce using rule 14 (statements)]
    DO        [reduce using rule 14 (statements)]
    CONTINUE  [reduce using rule 14 (statements)]
    READ      [reduce using rule 14 (statements)]
    WRITE     [reduce using rule 14 (statements)]
    RETURN    [reduce using rule 14 (statements)]
    $default  reduce using rule 14 (statements)

    statements  go to state 40
    statement   go to state 41
    var         go to state 42


State 30

   11 declaration: identifiers ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 43


State 31

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 44


State 32

   29 var: IDENT .
   30    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 45

    $default  reduce using rule 29 (var)


State 33

   18 statement: IF . bool_exp THEN statements ENDIF
   19          | IF . bool_exp THEN statements ELSE statements ENDIF

    IDENT    shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52

    var                         go to state 53
    bool_exp                    go to state 54
    relation_and_exps           go to state 55
    relation_and_exp            go to state 56
    relation_exps               go to state 57
    relation_exp                go to state 58
    expression                  go to state 59
    multiplicative_expressions  go to state 60
    multiplicative_expression   go to state 61
    terms                       go to state 62
    term                        go to state 63


State 34

   20 statement: WHILE . bool_exp BEGINLOOP statements ENDLOOP

    IDENT    shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52

    var                         go to state 53
    bool_exp                    go to state 64
    relation_and_exps           go to state 55
    relation_and_exp            go to state 56
    relation_exps               go to state 57
    relation_exp                go to state 58
    expression                  go to state 59
    multiplicative_expressions  go to state 60
    multiplicative_expression   go to state 61
    terms                       go to state 62
    term                        go to state 63


State 35

   21 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 65


State 36

   24 statement: CONTINUE .

    $default  reduce using rule 24 (statement)


State 37

   22 statement: READ . vars

    IDENT  shift, and go to state 32

    vars  go to state 66
    var   go to state 67


State 38

   23 statement: WRITE . vars

    IDENT  shift, and go to state 32

    vars  go to state 68
    var   go to state 67


State 39

   25 statement: RETURN . expression

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 52

    var                         go to state 53
    expression                  go to state 70
    multiplicative_expressions  go to state 60
    multiplicative_expression   go to state 61
    terms                       go to state 62
    term                        go to state 63


State 40

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY
   16 statements: statements . statement

    IDENT     shift, and go to state 32
    END_BODY  shift, and go to state 71
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    statement  go to state 72
    var        go to state 42


State 41

   15 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 73


State 42

   17 statement: var . ASSIGN expression
   26          | var . error expression

    error   shift, and go to state 74
    ASSIGN  shift, and go to state 75


State 43

   11 declaration: identifiers ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 76


State 44

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 77


State 45

   30 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 52

    var                         go to state 53
    expression                  go to state 78
    multiplicative_expressions  go to state 60
    multiplicative_expression   go to state 61
    terms                       go to state 62
    term                        go to state 63


State 46

   29 var: IDENT .
   30    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   75 term: IDENT . L_PAREN R_PAREN
   76     | IDENT . L_PAREN expressions R_PAREN

    L_PAREN           shift, and go to state 79
    L_SQUARE_BRACKET  shift, and go to state 45

    L_PAREN   [reduce using rule 29 (var)]
    $default  reduce using rule 29 (var)


State 47

   40 relation_exp: NOT . expression comp expression
   42             | NOT . TRUE
   44             | NOT . FALSE
   46             | NOT . L_PAREN bool_exp R_PAREN

    IDENT    shift, and go to state 46
    TRUE     shift, and go to state 80
    FALSE    shift, and go to state 81
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 82
    NUMBER   shift, and go to state 52

    var                         go to state 53
    expression                  go to state 83
    multiplicative_expressions  go to state 60
    multiplicative_expression   go to state 61
    terms                       go to state 62
    term                        go to state 63


State 48

   41 relation_exp: TRUE .

    $default  reduce using rule 41 (relation_exp)


State 49

   43 relation_exp: FALSE .

    $default  reduce using rule 43 (relation_exp)


State 50

   70 term: SUB . var
   72     | SUB . NUMBER
   74     | SUB . L_PAREN expression R_PAREN

    IDENT    shift, and go to state 32
    L_PAREN  shift, and go to state 84
    NUMBER   shift, and go to state 85

    var  go to state 86


State 51

   45 relation_exp: L_PAREN . bool_exp R_PAREN
   73 term: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52

    var                         go to state 53
    bool_exp                    go to state 87
    relation_and_exps           go to state 55
    relation_and_exp            go to state 56
    relation_exps               go to state 57
    relation_exp                go to state 58
    expression                  go to state 88
    multiplicative_expressions  go to state 60
    multiplicative_expression   go to state 61
    terms                       go to state 62
    term                        go to state 63


State 52

   71 term: NUMBER .

    $default  reduce using rule 71 (term)


State 53

   69 term: var .

    $default  reduce using rule 69 (term)


State 54

   18 statement: IF bool_exp . THEN statements ENDIF
   19          | IF bool_exp . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 89


State 55

   32 bool_exp: relation_and_exps . relation_and_exp
   34 relation_and_exps: relation_and_exps . OR relation_and_exp

    IDENT    shift, and go to state 46
    OR       shift, and go to state 90
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52

    var                         go to state 53
    relation_and_exp            go to state 91
    relation_exps               go to state 57
    relation_exp                go to state 58
    expression                  go to state 59
    multiplicative_expressions  go to state 60
    multiplicative_expression   go to state 61
    terms                       go to state 62
    term                        go to state 63


State 56

   31 bool_exp: relation_and_exp .
   33 relation_and_exps: relation_and_exp . OR

    OR  shift, and go to state 92

    $default  reduce using rule 31 (bool_exp)


State 57

   36 relation_and_exp: relation_exps . relation_exp
   38 relation_exps: relation_exps . AND relation_exp

    IDENT    shift, and go to state 46
    AND      shift, and go to state 93
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52

    var                         go to state 53
    relation_exp                go to state 94
    expression                  go to state 59
    multiplicative_expressions  go to state 60
    multiplicative_expression   go to state 61
    terms                       go to state 62
    term                        go to state 63


State 58

   35 relation_and_exp: relation_exp .
   37 relation_exps: relation_exp . AND

    AND  shift, and go to state 95

    $default  reduce using rule 35 (relation_and_exp)


State 59

   39 relation_exp: expression . comp expression

    EQ   shift, and go to state 96
    NEQ  shift, and go to state 97
    LT   shift, and go to state 98
    GT   shift, and go to state 99
    LTE  shift, and go to state 100
    GTE  shift, and go to state 101

    comp  go to state 102


State 60

   56 expression: multiplicative_expressions . multiplicative_expression
   59 multiplicative_expressions: multiplicative_expressions . ADD multiplicative_expression
   60                           | multiplicative_expressions . SUB multiplicative_expression

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 103
    ADD      shift, and go to state 104
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 52

    var                        go to state 53
    multiplicative_expression  go to state 105
    terms                      go to state 62
    term                       go to state 63


State 61

   55 expression: multiplicative_expression .
   57 multiplicative_expressions: multiplicative_expression . ADD
   58                           | multiplicative_expression . SUB

    SUB  shift, and go to state 106
    ADD  shift, and go to state 107

    SUB       [reduce using rule 55 (expression)]
    $default  reduce using rule 55 (expression)


State 62

   62 multiplicative_expression: terms . term
   66 terms: terms . MULT term
   67      | terms . DIV term
   68      | terms . MOD term

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    MULT     shift, and go to state 108
    DIV      shift, and go to state 109
    MOD      shift, and go to state 110
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 52

    var   go to state 53
    term  go to state 111


State 63

   61 multiplicative_expression: term .
   63 terms: term . MULT
   64      | term . DIV
   65      | term . MOD

    MULT  shift, and go to state 112
    DIV   shift, and go to state 113
    MOD   shift, and go to state 114

    $default  reduce using rule 61 (multiplicative_expression)


State 64

   20 statement: WHILE bool_exp . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 115


State 65

   21 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_exp

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    IDENT     [reduce using rule 14 (statements)]
    IF        [reduce using rule 14 (statements)]
    WHILE     [reduce using rule 14 (statements)]
    DO        [reduce using rule 14 (statements)]
    CONTINUE  [reduce using rule 14 (statements)]
    READ      [reduce using rule 14 (statements)]
    WRITE     [reduce using rule 14 (statements)]
    RETURN    [reduce using rule 14 (statements)]
    $default  reduce using rule 14 (statements)

    statements  go to state 116
    statement   go to state 41
    var         go to state 42


State 66

   22 statement: READ vars .
   28 vars: vars . COMMA var

    COMMA  shift, and go to state 117

    $default  reduce using rule 22 (statement)


State 67

   27 vars: var .

    $default  reduce using rule 27 (vars)


State 68

   23 statement: WRITE vars .
   28 vars: vars . COMMA var

    COMMA  shift, and go to state 117

    $default  reduce using rule 23 (statement)


State 69

   73 term: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 52

    var                         go to state 53
    expression                  go to state 118
    multiplicative_expressions  go to state 60
    multiplicative_expression   go to state 61
    terms                       go to state 62
    term                        go to state 63


State 70

   25 statement: RETURN expression .

    $default  reduce using rule 25 (statement)


State 71

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 72

   16 statements: statements statement .

    $default  reduce using rule 16 (statements)


State 73

   15 statements: statement SEMICOLON . statements

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    IDENT     [reduce using rule 14 (statements)]
    IF        [reduce using rule 14 (statements)]
    WHILE     [reduce using rule 14 (statements)]
    DO        [reduce using rule 14 (statements)]
    CONTINUE  [reduce using rule 14 (statements)]
    READ      [reduce using rule 14 (statements)]
    WRITE     [reduce using rule 14 (statements)]
    RETURN    [reduce using rule 14 (statements)]
    $default  reduce using rule 14 (statements)

    statements  go to state 119
    statement   go to state 41
    var         go to state 42


State 74

   26 statement: var error . expression

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 52

    var                         go to state 53
    expression                  go to state 120
    multiplicative_expressions  go to state 60
    multiplicative_expression   go to state 61
    terms                       go to state 62
    term                        go to state 63


State 75

   17 statement: var ASSIGN . expression

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 52

    var                         go to state 53
    expression                  go to state 121
    multiplicative_expressions  go to state 60
    multiplicative_expression   go to state 61
    terms                       go to state 62
    term                        go to state 63


State 76

   11 declaration: identifiers ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 11 (declaration)


State 77

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 122


State 78

   30 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 123


State 79

   75 term: IDENT L_PAREN . R_PAREN
   76     | IDENT L_PAREN . expressions R_PAREN

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 69
    R_PAREN  shift, and go to state 124
    NUMBER   shift, and go to state 52

    var                         go to state 53
    expressions                 go to state 125
    expression                  go to state 126
    multiplicative_expressions  go to state 60
    multiplicative_expression   go to state 61
    terms                       go to state 62
    term                        go to state 63


State 80

   42 relation_exp: NOT TRUE .

    $default  reduce using rule 42 (relation_exp)


State 81

   44 relation_exp: NOT FALSE .

    $default  reduce using rule 44 (relation_exp)


State 82

   46 relation_exp: NOT L_PAREN . bool_exp R_PAREN
   73 term: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52

    var                         go to state 53
    bool_exp                    go to state 127
    relation_and_exps           go to state 55
    relation_and_exp            go to state 56
    relation_exps               go to state 57
    relation_exp                go to state 58
    expression                  go to state 88
    multiplicative_expressions  go to state 60
    multiplicative_expression   go to state 61
    terms                       go to state 62
    term                        go to state 63


State 83

   40 relation_exp: NOT expression . comp expression

    EQ   shift, and go to state 96
    NEQ  shift, and go to state 97
    LT   shift, and go to state 98
    GT   shift, and go to state 99
    LTE  shift, and go to state 100
    GTE  shift, and go to state 101

    comp  go to state 128


State 84

   74 term: SUB L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 52

    var                         go to state 53
    expression                  go to state 129
    multiplicative_expressions  go to state 60
    multiplicative_expression   go to state 61
    terms                       go to state 62
    term                        go to state 63


State 85

   72 term: SUB NUMBER .

    $default  reduce using rule 72 (term)


State 86

   70 term: SUB var .

    $default  reduce using rule 70 (term)


State 87

   45 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 130


State 88

   39 relation_exp: expression . comp expression
   73 term: L_PAREN expression . R_PAREN

    EQ       shift, and go to state 96
    NEQ      shift, and go to state 97
    LT       shift, and go to state 98
    GT       shift, and go to state 99
    LTE      shift, and go to state 100
    GTE      shift, and go to state 101
    R_PAREN  shift, and go to state 131

    comp  go to state 102


State 89

   18 statement: IF bool_exp THEN . statements ENDIF
   19          | IF bool_exp THEN . statements ELSE statements ENDIF

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    IDENT     [reduce using rule 14 (statements)]
    IF        [reduce using rule 14 (statements)]
    WHILE     [reduce using rule 14 (statements)]
    DO        [reduce using rule 14 (statements)]
    CONTINUE  [reduce using rule 14 (statements)]
    READ      [reduce using rule 14 (statements)]
    WRITE     [reduce using rule 14 (statements)]
    RETURN    [reduce using rule 14 (statements)]
    $default  reduce using rule 14 (statements)

    statements  go to state 132
    statement   go to state 41
    var         go to state 42


State 90

   34 relation_and_exps: relation_and_exps OR . relation_and_exp

    IDENT    shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52

    var                         go to state 53
    relation_and_exp            go to state 133
    relation_exps               go to state 57
    relation_exp                go to state 58
    expression                  go to state 59
    multiplicative_expressions  go to state 60
    multiplicative_expression   go to state 61
    terms                       go to state 62
    term                        go to state 63


State 91

   32 bool_exp: relation_and_exps relation_and_exp .

    $default  reduce using rule 32 (bool_exp)


State 92

   33 relation_and_exps: relation_and_exp OR .

    $default  reduce using rule 33 (relation_and_exps)


State 93

   38 relation_exps: relation_exps AND . relation_exp

    IDENT    shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52

    var                         go to state 53
    relation_exp                go to state 134
    expression                  go to state 59
    multiplicative_expressions  go to state 60
    multiplicative_expression   go to state 61
    terms                       go to state 62
    term                        go to state 63


State 94

   36 relation_and_exp: relation_exps relation_exp .

    $default  reduce using rule 36 (relation_and_exp)


State 95

   37 relation_exps: relation_exp AND .

    $default  reduce using rule 37 (relation_exps)


State 96

   47 comp: EQ .

    $default  reduce using rule 47 (comp)


State 97

   48 comp: NEQ .

    $default  reduce using rule 48 (comp)


State 98

   49 comp: LT .

    $default  reduce using rule 49 (comp)


State 99

   50 comp: GT .

    $default  reduce using rule 50 (comp)


State 100

   51 comp: LTE .

    $default  reduce using rule 51 (comp)


State 101

   52 comp: GTE .

    $default  reduce using rule 52 (comp)


State 102

   39 relation_exp: expression comp . expression

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 52

    var                         go to state 53
    expression                  go to state 135
    multiplicative_expressions  go to state 60
    multiplicative_expression   go to state 61
    terms                       go to state 62
    term                        go to state 63


State 103

   60 multiplicative_expressions: multiplicative_expressions SUB . multiplicative_expression
   70 term: SUB . var
   72     | SUB . NUMBER
   74     | SUB . L_PAREN expression R_PAREN

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 136
    NUMBER   shift, and go to state 137

    var                        go to state 138
    multiplicative_expression  go to state 139
    terms                      go to state 62
    term                       go to state 63


State 104

   59 multiplicative_expressions: multiplicative_expressions ADD . multiplicative_expression

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 52

    var                        go to state 53
    multiplicative_expression  go to state 140
    terms                      go to state 62
    term                       go to state 63


State 105

   56 expression: multiplicative_expressions multiplicative_expression .

    $default  reduce using rule 56 (expression)


State 106

   58 multiplicative_expressions: multiplicative_expression SUB .

    $default  reduce using rule 58 (multiplicative_expressions)


State 107

   57 multiplicative_expressions: multiplicative_expression ADD .

    $default  reduce using rule 57 (multiplicative_expressions)


State 108

   66 terms: terms MULT . term

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 52

    var   go to state 53
    term  go to state 141


State 109

   67 terms: terms DIV . term

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 52

    var   go to state 53
    term  go to state 142


State 110

   68 terms: terms MOD . term

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 52

    var   go to state 53
    term  go to state 143


State 111

   62 multiplicative_expression: terms term .

    $default  reduce using rule 62 (multiplicative_expression)


State 112

   63 terms: term MULT .

    $default  reduce using rule 63 (terms)


State 113

   64 terms: term DIV .

    $default  reduce using rule 64 (terms)


State 114

   65 terms: term MOD .

    $default  reduce using rule 65 (terms)


State 115

   20 statement: WHILE bool_exp BEGINLOOP . statements ENDLOOP

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    IDENT     [reduce using rule 14 (statements)]
    IF        [reduce using rule 14 (statements)]
    WHILE     [reduce using rule 14 (statements)]
    DO        [reduce using rule 14 (statements)]
    CONTINUE  [reduce using rule 14 (statements)]
    READ      [reduce using rule 14 (statements)]
    WRITE     [reduce using rule 14 (statements)]
    RETURN    [reduce using rule 14 (statements)]
    $default  reduce using rule 14 (statements)

    statements  go to state 144
    statement   go to state 41
    var         go to state 42


State 116

   16 statements: statements . statement
   21 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_exp

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    ENDLOOP   shift, and go to state 145
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    statement  go to state 72
    var        go to state 42


State 117

   28 vars: vars COMMA . var

    IDENT  shift, and go to state 32

    var  go to state 146


State 118

   73 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 131


State 119

   15 statements: statement SEMICOLON statements .
   16           | statements . statement

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    IDENT     [reduce using rule 15 (statements)]
    IF        [reduce using rule 15 (statements)]
    WHILE     [reduce using rule 15 (statements)]
    DO        [reduce using rule 15 (statements)]
    CONTINUE  [reduce using rule 15 (statements)]
    READ      [reduce using rule 15 (statements)]
    WRITE     [reduce using rule 15 (statements)]
    RETURN    [reduce using rule 15 (statements)]
    $default  reduce using rule 15 (statements)

    statement  go to state 72
    var        go to state 42


State 120

   26 statement: var error expression .

    $default  reduce using rule 26 (statement)


State 121

   17 statement: var ASSIGN expression .

    $default  reduce using rule 17 (statement)


State 122

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 9 (declaration)


State 123

   30 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 30 (var)


State 124

   75 term: IDENT L_PAREN R_PAREN .

    $default  reduce using rule 75 (term)


State 125

   76 term: IDENT L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 147


State 126

   53 expressions: expression .
   54            | expression . COMMA expressions

    COMMA  shift, and go to state 148

    $default  reduce using rule 53 (expressions)


State 127

   46 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 149


State 128

   40 relation_exp: NOT expression comp . expression

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 52

    var                         go to state 53
    expression                  go to state 150
    multiplicative_expressions  go to state 60
    multiplicative_expression   go to state 61
    terms                       go to state 62
    term                        go to state 63


State 129

   74 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 151


State 130

   45 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 45 (relation_exp)


State 131

   73 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 73 (term)


State 132

   16 statements: statements . statement
   18 statement: IF bool_exp THEN statements . ENDIF
   19          | IF bool_exp THEN statements . ELSE statements ENDIF

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    ENDIF     shift, and go to state 152
    ELSE      shift, and go to state 153
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    statement  go to state 72
    var        go to state 42


State 133

   34 relation_and_exps: relation_and_exps OR relation_and_exp .

    $default  reduce using rule 34 (relation_and_exps)


State 134

   38 relation_exps: relation_exps AND relation_exp .

    $default  reduce using rule 38 (relation_exps)


State 135

   39 relation_exp: expression comp expression .

    $default  reduce using rule 39 (relation_exp)


State 136

   73 term: L_PAREN . expression R_PAREN
   74     | SUB L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 52

    var                         go to state 53
    expression                  go to state 154
    multiplicative_expressions  go to state 60
    multiplicative_expression   go to state 61
    terms                       go to state 62
    term                        go to state 63


State 137

   71 term: NUMBER .
   72     | SUB NUMBER .

    IDENT     reduce using rule 71 (term)
    IDENT     [reduce using rule 72 (term)]
    SUB       reduce using rule 71 (term)
    SUB       [reduce using rule 72 (term)]
    ADD       reduce using rule 71 (term)
    MULT      reduce using rule 71 (term)
    MULT      [reduce using rule 72 (term)]
    DIV       reduce using rule 71 (term)
    DIV       [reduce using rule 72 (term)]
    MOD       reduce using rule 71 (term)
    MOD       [reduce using rule 72 (term)]
    L_PAREN   reduce using rule 71 (term)
    L_PAREN   [reduce using rule 72 (term)]
    NUMBER    reduce using rule 71 (term)
    NUMBER    [reduce using rule 72 (term)]
    $default  reduce using rule 72 (term)


State 138

   69 term: var .
   70     | SUB var .

    IDENT     reduce using rule 69 (term)
    IDENT     [reduce using rule 70 (term)]
    SUB       reduce using rule 69 (term)
    SUB       [reduce using rule 70 (term)]
    ADD       reduce using rule 69 (term)
    MULT      reduce using rule 69 (term)
    MULT      [reduce using rule 70 (term)]
    DIV       reduce using rule 69 (term)
    DIV       [reduce using rule 70 (term)]
    MOD       reduce using rule 69 (term)
    MOD       [reduce using rule 70 (term)]
    L_PAREN   reduce using rule 69 (term)
    L_PAREN   [reduce using rule 70 (term)]
    NUMBER    reduce using rule 69 (term)
    NUMBER    [reduce using rule 70 (term)]
    $default  reduce using rule 70 (term)


State 139

   60 multiplicative_expressions: multiplicative_expressions SUB multiplicative_expression .

    $default  reduce using rule 60 (multiplicative_expressions)


State 140

   59 multiplicative_expressions: multiplicative_expressions ADD multiplicative_expression .

    $default  reduce using rule 59 (multiplicative_expressions)


State 141

   66 terms: terms MULT term .

    $default  reduce using rule 66 (terms)


State 142

   67 terms: terms DIV term .

    $default  reduce using rule 67 (terms)


State 143

   68 terms: terms MOD term .

    $default  reduce using rule 68 (terms)


State 144

   16 statements: statements . statement
   20 statement: WHILE bool_exp BEGINLOOP statements . ENDLOOP

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    ENDLOOP   shift, and go to state 155
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    statement  go to state 72
    var        go to state 42


State 145

   21 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 156


State 146

   28 vars: vars COMMA var .

    $default  reduce using rule 28 (vars)


State 147

   76 term: IDENT L_PAREN expressions R_PAREN .

    $default  reduce using rule 76 (term)


State 148

   54 expressions: expression COMMA . expressions

    IDENT    shift, and go to state 46
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 52

    var                         go to state 53
    expressions                 go to state 157
    expression                  go to state 126
    multiplicative_expressions  go to state 60
    multiplicative_expression   go to state 61
    terms                       go to state 62
    term                        go to state 63


State 149

   46 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 46 (relation_exp)


State 150

   40 relation_exp: NOT expression comp expression .

    $default  reduce using rule 40 (relation_exp)


State 151

   74 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 74 (term)


State 152

   18 statement: IF bool_exp THEN statements ENDIF .

    $default  reduce using rule 18 (statement)


State 153

   19 statement: IF bool_exp THEN statements ELSE . statements ENDIF

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    IDENT     [reduce using rule 14 (statements)]
    IF        [reduce using rule 14 (statements)]
    WHILE     [reduce using rule 14 (statements)]
    DO        [reduce using rule 14 (statements)]
    CONTINUE  [reduce using rule 14 (statements)]
    READ      [reduce using rule 14 (statements)]
    WRITE     [reduce using rule 14 (statements)]
    RETURN    [reduce using rule 14 (statements)]
    $default  reduce using rule 14 (statements)

    statements  go to state 158
    statement   go to state 41
    var         go to state 42


State 154

   73 term: L_PAREN expression . R_PAREN
   74     | SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 159


State 155

   20 statement: WHILE bool_exp BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 20 (statement)


State 156

   21 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_exp

    IDENT    shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52

    var                         go to state 53
    bool_exp                    go to state 160
    relation_and_exps           go to state 55
    relation_and_exp            go to state 56
    relation_exps               go to state 57
    relation_exp                go to state 58
    expression                  go to state 59
    multiplicative_expressions  go to state 60
    multiplicative_expression   go to state 61
    terms                       go to state 62
    term                        go to state 63


State 157

   54 expressions: expression COMMA expressions .

    $default  reduce using rule 54 (expressions)


State 158

   16 statements: statements . statement
   19 statement: IF bool_exp THEN statements ELSE statements . ENDIF

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    ENDIF     shift, and go to state 161
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39

    statement  go to state 72
    var        go to state 42


State 159

   73 term: L_PAREN expression R_PAREN .
   74     | SUB L_PAREN expression R_PAREN .

    IDENT     reduce using rule 73 (term)
    IDENT     [reduce using rule 74 (term)]
    SUB       reduce using rule 73 (term)
    SUB       [reduce using rule 74 (term)]
    ADD       reduce using rule 73 (term)
    MULT      reduce using rule 73 (term)
    MULT      [reduce using rule 74 (term)]
    DIV       reduce using rule 73 (term)
    DIV       [reduce using rule 74 (term)]
    MOD       reduce using rule 73 (term)
    MOD       [reduce using rule 74 (term)]
    L_PAREN   reduce using rule 73 (term)
    L_PAREN   [reduce using rule 74 (term)]
    NUMBER    reduce using rule 73 (term)
    NUMBER    [reduce using rule 74 (term)]
    $default  reduce using rule 74 (term)


State 160

   21 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_exp .

    $default  reduce using rule 21 (statement)


State 161

   19 statement: IF bool_exp THEN statements ELSE statements ENDIF .

    $default  reduce using rule 19 (statement)
