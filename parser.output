Terminals unused in grammar

   ERROR


Grammar

    0 $accept: prog_start "end of file"

    1 prog_start: program

    2 program: %empty
    3        | function program

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: %empty
    6             | declarations declaration SEMICOLON
    7             | declarations declaration

    8 declaration: identifiers COLON INTEGER
    9            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   10 identifiers: IDENT
   11            | identifiers COMMA IDENT

   12 statements: %empty
   13           | statement SEMICOLON statements

   14 statement: var ASSIGN expression
   15          | IF bool_exp THEN statements ENDIF
   16          | IF bool_exp THEN statements ELSE statements ENDIF
   17          | WHILE bool_exp BEGINLOOP statements ENDLOOP
   18          | DO BEGINLOOP statements ENDLOOP WHILE bool_exp
   19          | READ vars
   20          | WRITE vars
   21          | CONTINUE
   22          | RETURN expression

   23 vars: var
   24     | vars COMMA var

   25 var: IDENT
   26    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   27 bool_exp: relation_and_exp
   28         | relation_and_exp OR relation_and_exp

   29 relation_and_exp: relation_exp
   30                 | relation_and_exp AND relation_exp

   31 relation_exp: expression comp expression
   32             | NOT expression comp expression
   33             | TRUE
   34             | NOT TRUE
   35             | FALSE
   36             | NOT FALSE
   37             | L_PAREN bool_exp R_PAREN
   38             | NOT L_PAREN bool_exp R_PAREN

   39 comp: EQ
   40     | NEQ
   41     | LT
   42     | GT
   43     | LTE
   44     | GTE

   45 expressions: expression
   46            | expressions COMMA expression

   47 expression: multiplicative_expression
   48           | multiplicative_expression ADD multiplicative_expression
   49           | multiplicative_expression SUB multiplicative_expression

   50 multiplicative_expression: term
   51                          | multiplicative_expression MULT term
   52                          | multiplicative_expression DIV term
   53                          | multiplicative_expression MOD term

   54 term: var
   55     | SUB var
   56     | NUMBER
   57     | SUB NUMBER
   58     | L_PAREN expression R_PAREN
   59     | SUB L_PAREN expression R_PAREN
   60     | IDENT L_PAREN R_PAREN
   61     | IDENT L_PAREN expressions R_PAREN


Terminals, with rules where they appear

"end of file" (0) 0
error (256)
FUNCTION (258) 4
IDENT (259) 4 10 11 25 26 60 61
BEGIN_PARAMS (260) 4
END_PARAMS (261) 4
BEGIN_LOCALS (262) 4
END_LOCALS (263) 4
BEGIN_BODY (264) 4
END_BODY (265) 4
INTEGER (266) 8 9
ARRAY (267) 9
OF (268) 9
IF (269) 15 16
THEN (270) 15 16
ENDIF (271) 15 16
ELSE (272) 16
WHILE (273) 17 18
DO (274) 18
BEGINLOOP (275) 17 18
ENDLOOP (276) 17 18
CONTINUE (277) 21
READ (278) 19
WRITE (279) 20
AND (280) 30
OR (281) 28
NOT (282) 32 34 36 38
TRUE (283) 33 34
FALSE (284) 35 36
RETURN (285) 22
SUB (286) 49 55 57 59
ADD (287) 48
MULT (288) 51
DIV (289) 52
MOD (290) 53
EQ (291) 39
NEQ (292) 40
LT (293) 41
GT (294) 42
LTE (295) 43
GTE (296) 44
SEMICOLON (297) 4 6 13
COLON (298) 8 9
COMMA (299) 11 24 46
L_PAREN (300) 37 38 58 59 60 61
R_PAREN (301) 37 38 58 59 60 61
L_SQUARE_BRACKET (302) 9 26
R_SQUARE_BRACKET (303) 9 26
ASSIGN (304) 14
NUMBER (305) 9 56 57
ERROR (306)
UMINUS (307)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
prog_start (54)
    on left: 1, on right: 0
program (55)
    on left: 2 3, on right: 1 3
function (56)
    on left: 4, on right: 3
declarations (57)
    on left: 5 6 7, on right: 4 6 7
declaration (58)
    on left: 8 9, on right: 6 7
identifiers (59)
    on left: 10 11, on right: 8 9 11
statements (60)
    on left: 12 13, on right: 4 13 15 16 17 18
statement (61)
    on left: 14 15 16 17 18 19 20 21 22, on right: 13
vars (62)
    on left: 23 24, on right: 19 20 24
var (63)
    on left: 25 26, on right: 14 23 24 54 55
bool_exp (64)
    on left: 27 28, on right: 15 16 17 18 37 38
relation_and_exp (65)
    on left: 29 30, on right: 27 28 30
relation_exp (66)
    on left: 31 32 33 34 35 36 37 38, on right: 29 30
comp (67)
    on left: 39 40 41 42 43 44, on right: 31 32
expressions (68)
    on left: 45 46, on right: 46 61
expression (69)
    on left: 47 48 49, on right: 14 22 26 31 32 45 46 58 59
multiplicative_expression (70)
    on left: 50 51 52 53, on right: 47 48 49 51 52 53
term (71)
    on left: 54 55 56 57 58 59 60 61, on right: 50 51 52 53


State 0

    0 $accept: . prog_start "end of file"

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (program)

    prog_start  go to state 2
    program     go to state 3
    function    go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: prog_start . "end of file"

    "end of file"  shift, and go to state 6


State 3

    1 prog_start: program .

    $default  reduce using rule 1 (prog_start)


State 4

    3 program: function . program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (program)

    program   go to state 7
    function  go to state 4


State 5

    4 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: prog_start "end of file" .

    $default  accept


State 7

    3 program: function program .

    $default  reduce using rule 3 (program)


State 8

    4 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 5 (declarations)

    declarations  go to state 10


State 10

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY
    6 declarations: declarations . declaration SEMICOLON
    7             | declarations . declaration

    IDENT       shift, and go to state 11
    END_PARAMS  shift, and go to state 12

    declaration  go to state 13
    identifiers  go to state 14


State 11

   10 identifiers: IDENT .

    $default  reduce using rule 10 (identifiers)


State 12

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 15


State 13

    6 declarations: declarations declaration . SEMICOLON
    7             | declarations declaration .

    SEMICOLON  shift, and go to state 16

    $default  reduce using rule 7 (declarations)


State 14

    8 declaration: identifiers . COLON INTEGER
    9            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   11 identifiers: identifiers . COMMA IDENT

    COLON  shift, and go to state 17
    COMMA  shift, and go to state 18


State 15

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 5 (declarations)

    declarations  go to state 19


State 16

    6 declarations: declarations declaration SEMICOLON .

    $default  reduce using rule 6 (declarations)


State 17

    8 declaration: identifiers COLON . INTEGER
    9            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 20
    ARRAY    shift, and go to state 21


State 18

   11 identifiers: identifiers COMMA . IDENT

    IDENT  shift, and go to state 22


State 19

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY
    6 declarations: declarations . declaration SEMICOLON
    7             | declarations . declaration

    IDENT       shift, and go to state 11
    END_LOCALS  shift, and go to state 23

    declaration  go to state 13
    identifiers  go to state 14


State 20

    8 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 8 (declaration)


State 21

    9 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 24


State 22

   11 identifiers: identifiers COMMA IDENT .

    $default  reduce using rule 11 (identifiers)


State 23

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 25


State 24

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 26


State 25

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IDENT     shift, and go to state 27
    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    CONTINUE  shift, and go to state 31
    READ      shift, and go to state 32
    WRITE     shift, and go to state 33
    RETURN    shift, and go to state 34

    $default  reduce using rule 12 (statements)

    statements  go to state 35
    statement   go to state 36
    var         go to state 37


State 26

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 38


State 27

   25 var: IDENT .
   26    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 39

    $default  reduce using rule 25 (var)


State 28

   15 statement: IF . bool_exp THEN statements ENDIF
   16          | IF . bool_exp THEN statements ELSE statements ENDIF

    IDENT    shift, and go to state 40
    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    SUB      shift, and go to state 44
    L_PAREN  shift, and go to state 45
    NUMBER   shift, and go to state 46

    var                        go to state 47
    bool_exp                   go to state 48
    relation_and_exp           go to state 49
    relation_exp               go to state 50
    expression                 go to state 51
    multiplicative_expression  go to state 52
    term                       go to state 53


State 29

   17 statement: WHILE . bool_exp BEGINLOOP statements ENDLOOP

    IDENT    shift, and go to state 40
    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    SUB      shift, and go to state 44
    L_PAREN  shift, and go to state 45
    NUMBER   shift, and go to state 46

    var                        go to state 47
    bool_exp                   go to state 54
    relation_and_exp           go to state 49
    relation_exp               go to state 50
    expression                 go to state 51
    multiplicative_expression  go to state 52
    term                       go to state 53


State 30

   18 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 55


State 31

   21 statement: CONTINUE .

    $default  reduce using rule 21 (statement)


State 32

   19 statement: READ . vars

    IDENT  shift, and go to state 27

    vars  go to state 56
    var   go to state 57


State 33

   20 statement: WRITE . vars

    IDENT  shift, and go to state 27

    vars  go to state 58
    var   go to state 57


State 34

   22 statement: RETURN . expression

    IDENT    shift, and go to state 40
    SUB      shift, and go to state 44
    L_PAREN  shift, and go to state 59
    NUMBER   shift, and go to state 46

    var                        go to state 47
    expression                 go to state 60
    multiplicative_expression  go to state 52
    term                       go to state 53


State 35

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 61


State 36

   13 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 62


State 37

   14 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 63


State 38

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 64


State 39

   26 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 40
    SUB      shift, and go to state 44
    L_PAREN  shift, and go to state 59
    NUMBER   shift, and go to state 46

    var                        go to state 47
    expression                 go to state 65
    multiplicative_expression  go to state 52
    term                       go to state 53


State 40

   25 var: IDENT .
   26    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   60 term: IDENT . L_PAREN R_PAREN
   61     | IDENT . L_PAREN expressions R_PAREN

    L_PAREN           shift, and go to state 66
    L_SQUARE_BRACKET  shift, and go to state 39

    $default  reduce using rule 25 (var)


State 41

   32 relation_exp: NOT . expression comp expression
   34             | NOT . TRUE
   36             | NOT . FALSE
   38             | NOT . L_PAREN bool_exp R_PAREN

    IDENT    shift, and go to state 40
    TRUE     shift, and go to state 67
    FALSE    shift, and go to state 68
    SUB      shift, and go to state 44
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 46

    var                        go to state 47
    expression                 go to state 70
    multiplicative_expression  go to state 52
    term                       go to state 53


State 42

   33 relation_exp: TRUE .

    $default  reduce using rule 33 (relation_exp)


State 43

   35 relation_exp: FALSE .

    $default  reduce using rule 35 (relation_exp)


State 44

   55 term: SUB . var
   57     | SUB . NUMBER
   59     | SUB . L_PAREN expression R_PAREN

    IDENT    shift, and go to state 27
    L_PAREN  shift, and go to state 71
    NUMBER   shift, and go to state 72

    var  go to state 73


State 45

   37 relation_exp: L_PAREN . bool_exp R_PAREN
   58 term: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 40
    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    SUB      shift, and go to state 44
    L_PAREN  shift, and go to state 45
    NUMBER   shift, and go to state 46

    var                        go to state 47
    bool_exp                   go to state 74
    relation_and_exp           go to state 49
    relation_exp               go to state 50
    expression                 go to state 75
    multiplicative_expression  go to state 52
    term                       go to state 53


State 46

   56 term: NUMBER .

    $default  reduce using rule 56 (term)


State 47

   54 term: var .

    $default  reduce using rule 54 (term)


State 48

   15 statement: IF bool_exp . THEN statements ENDIF
   16          | IF bool_exp . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 76


State 49

   27 bool_exp: relation_and_exp .
   28         | relation_and_exp . OR relation_and_exp
   30 relation_and_exp: relation_and_exp . AND relation_exp

    AND  shift, and go to state 77
    OR   shift, and go to state 78

    $default  reduce using rule 27 (bool_exp)


State 50

   29 relation_and_exp: relation_exp .

    $default  reduce using rule 29 (relation_and_exp)


State 51

   31 relation_exp: expression . comp expression

    EQ   shift, and go to state 79
    NEQ  shift, and go to state 80
    LT   shift, and go to state 81
    GT   shift, and go to state 82
    LTE  shift, and go to state 83
    GTE  shift, and go to state 84

    comp  go to state 85


State 52

   47 expression: multiplicative_expression .
   48           | multiplicative_expression . ADD multiplicative_expression
   49           | multiplicative_expression . SUB multiplicative_expression
   51 multiplicative_expression: multiplicative_expression . MULT term
   52                          | multiplicative_expression . DIV term
   53                          | multiplicative_expression . MOD term

    SUB   shift, and go to state 86
    ADD   shift, and go to state 87
    MULT  shift, and go to state 88
    DIV   shift, and go to state 89
    MOD   shift, and go to state 90

    $default  reduce using rule 47 (expression)


State 53

   50 multiplicative_expression: term .

    $default  reduce using rule 50 (multiplicative_expression)


State 54

   17 statement: WHILE bool_exp . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 91


State 55

   18 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_exp

    IDENT     shift, and go to state 27
    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    CONTINUE  shift, and go to state 31
    READ      shift, and go to state 32
    WRITE     shift, and go to state 33
    RETURN    shift, and go to state 34

    $default  reduce using rule 12 (statements)

    statements  go to state 92
    statement   go to state 36
    var         go to state 37


State 56

   19 statement: READ vars .
   24 vars: vars . COMMA var

    COMMA  shift, and go to state 93

    $default  reduce using rule 19 (statement)


State 57

   23 vars: var .

    $default  reduce using rule 23 (vars)


State 58

   20 statement: WRITE vars .
   24 vars: vars . COMMA var

    COMMA  shift, and go to state 93

    $default  reduce using rule 20 (statement)


State 59

   58 term: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 40
    SUB      shift, and go to state 44
    L_PAREN  shift, and go to state 59
    NUMBER   shift, and go to state 46

    var                        go to state 47
    expression                 go to state 94
    multiplicative_expression  go to state 52
    term                       go to state 53


State 60

   22 statement: RETURN expression .

    $default  reduce using rule 22 (statement)


State 61

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 62

   13 statements: statement SEMICOLON . statements

    IDENT     shift, and go to state 27
    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    CONTINUE  shift, and go to state 31
    READ      shift, and go to state 32
    WRITE     shift, and go to state 33
    RETURN    shift, and go to state 34

    $default  reduce using rule 12 (statements)

    statements  go to state 95
    statement   go to state 36
    var         go to state 37


State 63

   14 statement: var ASSIGN . expression

    IDENT    shift, and go to state 40
    SUB      shift, and go to state 44
    L_PAREN  shift, and go to state 59
    NUMBER   shift, and go to state 46

    var                        go to state 47
    expression                 go to state 96
    multiplicative_expression  go to state 52
    term                       go to state 53


State 64

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 97


State 65

   26 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 98


State 66

   60 term: IDENT L_PAREN . R_PAREN
   61     | IDENT L_PAREN . expressions R_PAREN

    IDENT    shift, and go to state 40
    SUB      shift, and go to state 44
    L_PAREN  shift, and go to state 59
    R_PAREN  shift, and go to state 99
    NUMBER   shift, and go to state 46

    var                        go to state 47
    expressions                go to state 100
    expression                 go to state 101
    multiplicative_expression  go to state 52
    term                       go to state 53


State 67

   34 relation_exp: NOT TRUE .

    $default  reduce using rule 34 (relation_exp)


State 68

   36 relation_exp: NOT FALSE .

    $default  reduce using rule 36 (relation_exp)


State 69

   38 relation_exp: NOT L_PAREN . bool_exp R_PAREN
   58 term: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 40
    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    SUB      shift, and go to state 44
    L_PAREN  shift, and go to state 45
    NUMBER   shift, and go to state 46

    var                        go to state 47
    bool_exp                   go to state 102
    relation_and_exp           go to state 49
    relation_exp               go to state 50
    expression                 go to state 75
    multiplicative_expression  go to state 52
    term                       go to state 53


State 70

   32 relation_exp: NOT expression . comp expression

    EQ   shift, and go to state 79
    NEQ  shift, and go to state 80
    LT   shift, and go to state 81
    GT   shift, and go to state 82
    LTE  shift, and go to state 83
    GTE  shift, and go to state 84

    comp  go to state 103


State 71

   59 term: SUB L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 40
    SUB      shift, and go to state 44
    L_PAREN  shift, and go to state 59
    NUMBER   shift, and go to state 46

    var                        go to state 47
    expression                 go to state 104
    multiplicative_expression  go to state 52
    term                       go to state 53


State 72

   57 term: SUB NUMBER .

    $default  reduce using rule 57 (term)


State 73

   55 term: SUB var .

    $default  reduce using rule 55 (term)


State 74

   37 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 105


State 75

   31 relation_exp: expression . comp expression
   58 term: L_PAREN expression . R_PAREN

    EQ       shift, and go to state 79
    NEQ      shift, and go to state 80
    LT       shift, and go to state 81
    GT       shift, and go to state 82
    LTE      shift, and go to state 83
    GTE      shift, and go to state 84
    R_PAREN  shift, and go to state 106

    comp  go to state 85


State 76

   15 statement: IF bool_exp THEN . statements ENDIF
   16          | IF bool_exp THEN . statements ELSE statements ENDIF

    IDENT     shift, and go to state 27
    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    CONTINUE  shift, and go to state 31
    READ      shift, and go to state 32
    WRITE     shift, and go to state 33
    RETURN    shift, and go to state 34

    $default  reduce using rule 12 (statements)

    statements  go to state 107
    statement   go to state 36
    var         go to state 37


State 77

   30 relation_and_exp: relation_and_exp AND . relation_exp

    IDENT    shift, and go to state 40
    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    SUB      shift, and go to state 44
    L_PAREN  shift, and go to state 45
    NUMBER   shift, and go to state 46

    var                        go to state 47
    relation_exp               go to state 108
    expression                 go to state 51
    multiplicative_expression  go to state 52
    term                       go to state 53


State 78

   28 bool_exp: relation_and_exp OR . relation_and_exp

    IDENT    shift, and go to state 40
    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    SUB      shift, and go to state 44
    L_PAREN  shift, and go to state 45
    NUMBER   shift, and go to state 46

    var                        go to state 47
    relation_and_exp           go to state 109
    relation_exp               go to state 50
    expression                 go to state 51
    multiplicative_expression  go to state 52
    term                       go to state 53


State 79

   39 comp: EQ .

    $default  reduce using rule 39 (comp)


State 80

   40 comp: NEQ .

    $default  reduce using rule 40 (comp)


State 81

   41 comp: LT .

    $default  reduce using rule 41 (comp)


State 82

   42 comp: GT .

    $default  reduce using rule 42 (comp)


State 83

   43 comp: LTE .

    $default  reduce using rule 43 (comp)


State 84

   44 comp: GTE .

    $default  reduce using rule 44 (comp)


State 85

   31 relation_exp: expression comp . expression

    IDENT    shift, and go to state 40
    SUB      shift, and go to state 44
    L_PAREN  shift, and go to state 59
    NUMBER   shift, and go to state 46

    var                        go to state 47
    expression                 go to state 110
    multiplicative_expression  go to state 52
    term                       go to state 53


State 86

   49 expression: multiplicative_expression SUB . multiplicative_expression

    IDENT    shift, and go to state 40
    SUB      shift, and go to state 44
    L_PAREN  shift, and go to state 59
    NUMBER   shift, and go to state 46

    var                        go to state 47
    multiplicative_expression  go to state 111
    term                       go to state 53


State 87

   48 expression: multiplicative_expression ADD . multiplicative_expression

    IDENT    shift, and go to state 40
    SUB      shift, and go to state 44
    L_PAREN  shift, and go to state 59
    NUMBER   shift, and go to state 46

    var                        go to state 47
    multiplicative_expression  go to state 112
    term                       go to state 53


State 88

   51 multiplicative_expression: multiplicative_expression MULT . term

    IDENT    shift, and go to state 40
    SUB      shift, and go to state 44
    L_PAREN  shift, and go to state 59
    NUMBER   shift, and go to state 46

    var   go to state 47
    term  go to state 113


State 89

   52 multiplicative_expression: multiplicative_expression DIV . term

    IDENT    shift, and go to state 40
    SUB      shift, and go to state 44
    L_PAREN  shift, and go to state 59
    NUMBER   shift, and go to state 46

    var   go to state 47
    term  go to state 114


State 90

   53 multiplicative_expression: multiplicative_expression MOD . term

    IDENT    shift, and go to state 40
    SUB      shift, and go to state 44
    L_PAREN  shift, and go to state 59
    NUMBER   shift, and go to state 46

    var   go to state 47
    term  go to state 115


State 91

   17 statement: WHILE bool_exp BEGINLOOP . statements ENDLOOP

    IDENT     shift, and go to state 27
    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    CONTINUE  shift, and go to state 31
    READ      shift, and go to state 32
    WRITE     shift, and go to state 33
    RETURN    shift, and go to state 34

    $default  reduce using rule 12 (statements)

    statements  go to state 116
    statement   go to state 36
    var         go to state 37


State 92

   18 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 117


State 93

   24 vars: vars COMMA . var

    IDENT  shift, and go to state 27

    var  go to state 118


State 94

   58 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 106


State 95

   13 statements: statement SEMICOLON statements .

    $default  reduce using rule 13 (statements)


State 96

   14 statement: var ASSIGN expression .

    $default  reduce using rule 14 (statement)


State 97

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 9 (declaration)


State 98

   26 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 26 (var)


State 99

   60 term: IDENT L_PAREN R_PAREN .

    $default  reduce using rule 60 (term)


State 100

   46 expressions: expressions . COMMA expression
   61 term: IDENT L_PAREN expressions . R_PAREN

    COMMA    shift, and go to state 119
    R_PAREN  shift, and go to state 120


State 101

   45 expressions: expression .

    $default  reduce using rule 45 (expressions)


State 102

   38 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 121


State 103

   32 relation_exp: NOT expression comp . expression

    IDENT    shift, and go to state 40
    SUB      shift, and go to state 44
    L_PAREN  shift, and go to state 59
    NUMBER   shift, and go to state 46

    var                        go to state 47
    expression                 go to state 122
    multiplicative_expression  go to state 52
    term                       go to state 53


State 104

   59 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 123


State 105

   37 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 37 (relation_exp)


State 106

   58 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 58 (term)


State 107

   15 statement: IF bool_exp THEN statements . ENDIF
   16          | IF bool_exp THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 124
    ELSE   shift, and go to state 125


State 108

   30 relation_and_exp: relation_and_exp AND relation_exp .

    $default  reduce using rule 30 (relation_and_exp)


State 109

   28 bool_exp: relation_and_exp OR relation_and_exp .
   30 relation_and_exp: relation_and_exp . AND relation_exp

    AND  shift, and go to state 77

    $default  reduce using rule 28 (bool_exp)


State 110

   31 relation_exp: expression comp expression .

    $default  reduce using rule 31 (relation_exp)


State 111

   49 expression: multiplicative_expression SUB multiplicative_expression .
   51 multiplicative_expression: multiplicative_expression . MULT term
   52                          | multiplicative_expression . DIV term
   53                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 88
    DIV   shift, and go to state 89
    MOD   shift, and go to state 90

    $default  reduce using rule 49 (expression)


State 112

   48 expression: multiplicative_expression ADD multiplicative_expression .
   51 multiplicative_expression: multiplicative_expression . MULT term
   52                          | multiplicative_expression . DIV term
   53                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 88
    DIV   shift, and go to state 89
    MOD   shift, and go to state 90

    $default  reduce using rule 48 (expression)


State 113

   51 multiplicative_expression: multiplicative_expression MULT term .

    $default  reduce using rule 51 (multiplicative_expression)


State 114

   52 multiplicative_expression: multiplicative_expression DIV term .

    $default  reduce using rule 52 (multiplicative_expression)


State 115

   53 multiplicative_expression: multiplicative_expression MOD term .

    $default  reduce using rule 53 (multiplicative_expression)


State 116

   17 statement: WHILE bool_exp BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 126


State 117

   18 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 127


State 118

   24 vars: vars COMMA var .

    $default  reduce using rule 24 (vars)


State 119

   46 expressions: expressions COMMA . expression

    IDENT    shift, and go to state 40
    SUB      shift, and go to state 44
    L_PAREN  shift, and go to state 59
    NUMBER   shift, and go to state 46

    var                        go to state 47
    expression                 go to state 128
    multiplicative_expression  go to state 52
    term                       go to state 53


State 120

   61 term: IDENT L_PAREN expressions R_PAREN .

    $default  reduce using rule 61 (term)


State 121

   38 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 38 (relation_exp)


State 122

   32 relation_exp: NOT expression comp expression .

    $default  reduce using rule 32 (relation_exp)


State 123

   59 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 59 (term)


State 124

   15 statement: IF bool_exp THEN statements ENDIF .

    $default  reduce using rule 15 (statement)


State 125

   16 statement: IF bool_exp THEN statements ELSE . statements ENDIF

    IDENT     shift, and go to state 27
    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    CONTINUE  shift, and go to state 31
    READ      shift, and go to state 32
    WRITE     shift, and go to state 33
    RETURN    shift, and go to state 34

    $default  reduce using rule 12 (statements)

    statements  go to state 129
    statement   go to state 36
    var         go to state 37


State 126

   17 statement: WHILE bool_exp BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 17 (statement)


State 127

   18 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_exp

    IDENT    shift, and go to state 40
    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    SUB      shift, and go to state 44
    L_PAREN  shift, and go to state 45
    NUMBER   shift, and go to state 46

    var                        go to state 47
    bool_exp                   go to state 130
    relation_and_exp           go to state 49
    relation_exp               go to state 50
    expression                 go to state 51
    multiplicative_expression  go to state 52
    term                       go to state 53


State 128

   46 expressions: expressions COMMA expression .

    $default  reduce using rule 46 (expressions)


State 129

   16 statement: IF bool_exp THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 131


State 130

   18 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_exp .

    $default  reduce using rule 18 (statement)


State 131

   16 statement: IF bool_exp THEN statements ELSE statements ENDIF .

    $default  reduce using rule 16 (statement)
